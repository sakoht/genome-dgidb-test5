#!/gsc/bin/perl

use strict;
use warnings;

use above "Genome";

use Test::More tests => 13;

$ENV{UR_DBI_NO_COMMIT} = 1;
$ENV{UR_USE_DUMMY_AUTOGENERATED_IDS} = 1;

BEGIN {
    use_ok('Genome::Model::Command::Create::ProcessingProfile::Assembly');
    use_ok('Genome::ProcessingProfile::Assembly');
}

my %params = (
              profile_name => 'testing',
              assembler_name => 'newbler',
              assembler_params => '-a 0',
              read_filter_name => 'seqclean',
              read_filter_params => 'test read filter params',
              read_trimmer_name => 'sfffile',
              read_trimmer_params => 'test read trimmer params',
              sequencing_platform => '454',
              bare_args => [],
          );

my $create_pp_command = Genome::Model::Command::Create::ProcessingProfile::Assembly->create(%params);
isa_ok($create_pp_command,'Genome::Model::Command::Create::ProcessingProfile::Assembly');
ok($create_pp_command->execute(), 'execute processing profile create');

# Get it and make sure there is one
my @processing_profiles = Genome::ProcessingProfile::Assembly->get(name => $params{profile_name});
is(scalar(@processing_profiles),1,'expected one processing profile');

# check the type
my $pp = $processing_profiles[0];
isa_ok($pp ,'Genome::ProcessingProfile::Assembly');
delete $params{profile_name};
delete $params{bare_args};

for my $property_name (keys %params) {
    is($pp->$property_name,$params{$property_name},$property_name .' accessor');
}

exit;
