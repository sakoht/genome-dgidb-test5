#!/gsc/bin/perl

use strict;
use warnings;

use above "Genome";

use Test::More tests => 10;

$ENV{UR_DBI_NO_COMMIT} = 1;
$ENV{UR_USE_DUMMY_AUTOGENERATED_IDS} = 1;

BEGIN {
    use_ok('Genome::Model::Command::Create::ProcessingProfile::Assembly');
}

my $pp_name = 'testing';
my $read_filter = 'seq-clean';
my $read_trimmer = 'sff-file';
my $assembler = 'newbler';

my $create_pp_command = Genome::Model::Command::Create::ProcessingProfile::Assembly->create(
                                                                                            profile_name		   => $pp_name,
                                                                                            assembler => $assembler,
                                                                                            read_filter => $read_filter,
                                                                                            read_trimmer => $read_trimmer,
                                                                                            bare_args => [],   
 );

isa_ok($create_pp_command,'Genome::Model::Command::Create::ProcessingProfile::Assembly');
ok($create_pp_command->execute(), 'execute processing profile create');

# Get it and make sure there is one
my @processing_profiles = Genome::ProcessingProfile::Assembly->get(name => $pp_name);
is(scalar(@processing_profiles),1,'expected one processing profile');

# check the type
my $pp = $processing_profiles[0];
isa_ok($pp ,'Genome::ProcessingProfile::Assembly');

# check accessors
is($pp->name,$pp_name,'name accessor');
is($pp->type_name,'assembly','type name accessor');
is($pp->read_filter,$read_filter,'read_filter accessor');
is($pp->read_trimmer,$read_trimmer,'read_trimmer accessor');
is($pp->assembler,$assembler,'assembler accessor');

exit;
