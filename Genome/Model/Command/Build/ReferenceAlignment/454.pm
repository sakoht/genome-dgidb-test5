package Genome::Model::Command::Build::ReferenceAlignment::454;

use strict;
use warnings;

use Genome;

class Genome::Model::Command::Build::ReferenceAlignment::454 {
    is => 'Genome::Model::Command::Build::ReferenceAlignment',
    has => [],
 };

sub sub_command_sort_position { 40 }


sub help_brief {
    "postprocess any alignments generated by a model which have not yet been added to the full assembly"
}

sub help_synopsis {
    return <<"EOS"
genome-model build mymodel 
EOS
}

sub help_detail {
    return <<"EOS"
One build of a given reference-alignment model.
EOS
}
sub stages {
    my @stages = qw/
        stage1
        stage2
    /;
    return @stages;
}

sub stage1_job_classes {
    my @sub_command_classes= qw/
        Genome::Model::Command::Build::ReferenceAlignment::AssignRun
        Genome::Model::Command::Build::ReferenceAlignment::AlignReads
        Genome::Model::Command::Build::ReferenceAlignment::ProcessLowQualityAlignments
    /;
    return @sub_command_classes;
}

sub stage2_job_classes {
    my @step1 =  ('Genome::Model::Command::Build::ReferenceAlignment::MergeAlignments');
    my @step2 =  ('Genome::Model::Command::Build::ReferenceAlignment::UpdateGenotype');
    my @step3 =  ('Genome::Model::Command::Build::ReferenceAlignment::FindVariations'),
    my @step4 =  ('Genome::Model::Command::Build::ReferenceAlignment::PostprocessVariations', 'Genome::Model::Command::Build::ReferenceAlignment::AnnotateVariations');

    return (\@step1, \@step2, \@step3, \@step4);
}
sub stage1_objects {
    my $self = shift;
    return $self->model->unbuilt_read_sets;
}

sub stage2_objects {
    my $self = shift;
    my $model = $self->model;
    my @subreferences_names = grep {$_ ne "all_sequences" } $model->get_subreference_names(reference_extension=>'bfa');

    unless (@subreferences_names > 0) {
        @subreferences_names = ('all_sequences');
    }
    return @subreferences_names;
}

sub execute {
    my $self = shift;
    return $self->build_in_stages;
}

sub _get_sub_command_class_name{
  return __PACKAGE__; 
}

1;

