#!/gsc/bin/perl

use strict;
use warnings;

use Genome;
use Test::More skip_all => 'temporarily broken from a data problem, will fix', 'no_plan';
#use Test::More 'no_plan';
#use GSCApp;
#App->init();

$ENV{UR_DBI_NO_COMMIT} = 1;
$ENV{UR_USE_DUMMY_AUTOGENERATED_IDS} = 1;

my $test_dir = '/gsc/var/cache/testsuite/data/Genome-Model-PolyphredPolyscan/';
my $file = "$test_dir/combined_input.tsv";

my $polyphredpolyscan_data_dir = "/tmp/test_polyphredpolyscan_$ENV{USER}/";
my $research_project_name = "test_research_project";
my $sensitivity = 'low';
my $technology_type = 'polyphred';
my $subject_name = 'polyphredpolyscan_unit_test';
#my $model_name = "$subject_name.$research_project_name.$technology_type.$sensitivity";
my $model_name = "test.TCGA_Production.polyphred.high";

# FIXME stupid hack... have to explicitly create combine variants model or 
# we cannot set a test data directory
my $combine_variants_data_directory = "/tmp/test_combine_variants_$ENV{USER}/";
my $new_combine_variants_model = Genome::Model::CombineVariants->get_or_create(
    subject_name    =>  $subject_name,  #TODO this has changed
    data_directory  =>  $combine_variants_data_directory,
);
ok($new_combine_variants_model, "Created the new combine variants model explicitly for the new PolyphredPolyscan models");
isa_ok($new_combine_variants_model, "Genome::Model::CombineVariants");

# Create the polyphredpolyscan model
my $model = Genome::Model::PolyphredPolyscan->get_or_create(
    model_name => $model_name,
    research_project => $research_project_name,
    technology => $technology_type,
    sensitivity => $sensitivity,
    subject_name => $subject_name,
    data_directory => $polyphredpolyscan_data_dir,
);

# Check stuff
isa_ok($model, "Genome::Model::PolyphredPolyscan");
ok(-s $file, "Test file source exists");

my $model_directory = $model->data_directory;
ok(-d $model_directory, "model_directory $model_directory exists");

my $pending_input_dir = $model->pending_instrument_data_dir;
ok(-d $pending_input_dir, "pending input dir $pending_input_dir exists");

# Check methods
$DB::single=1;
is($model->build_subclass_name, 'polyphred polyscan', 'build subclass is correct');
is($model->resolve_data_directory, "/gscmnt/834/info/medseq/polyphred_polyscan//$model_name/", 'resolve_data_directory works as expected');
ok(-d $model->pending_instrument_data_dir, "pending instrument data dir exists");
ok(-d $model->source_instrument_data_dir, "source instrument data dir exists");

# TODO test combined_input_file accessor... but its not in the build dir

# TODO test these things, expect certain results
# test predict_genotype
# test next_pcr_product_genotype ... will need test data 
# test next_sample_genotype... will need test data 
# test pending_instrument_data_files... will need test data 


# clean up
END {
    delete_directory_contents($polyphredpolyscan_data_dir);
    delete_directory_contents($combine_variants_data_directory);
}

# Delete the directory and recursively delete all subdirs and their contents
sub delete_directory_contents {
    my $directory_or_file = shift;
    chomp($directory_or_file);
    
    # if its a directory, recurse
    if (-d $directory_or_file) {
        my @directory_contents = `ls $directory_or_file`;
        for my $new_directory_or_file (@directory_contents) {
            my $full_path = "$directory_or_file/$new_directory_or_file";
            delete_directory_contents($full_path);
        }
        rmdir($directory_or_file);
    }
    else {
        unlink $directory_or_file;
    }
}
