#!/usr/bin/env perl
use strict;
use warnings;

use above "Genome";
use Test::More tests => 11;

$ENV{USE_DUMMY_AUTOGENERATED_IDS} = 1;
$ENV{UR_DBI_NO_COMMIT} = 1;

use_ok("Genome::Model");
use_ok("Genome::Model::Build");
use_ok("Genome::Model::Build::Command::Remove");

my $s = Genome::Sample->create(id => -888, name => 'TEST-' . __FILE__ . "-$$");
ok($s, "made a test sample");

my $p = Genome::ProcessingProfile::TestPipeline->create(
    id => -999, 
    name => "test " . __FILE__ . " on host $ENV{HOSTNAME} process $$",
    some_command_name => 'ls',
);
ok($p, "made a test processing profile");

my $m = Genome::Model::TestPipeline->create(
    id => -1, 
    processing_profile_id => -999,
    subject_class_name => ref($s),
    subject_id => $s->id,
);
ok($m, "made a test model");

my $b1 = $m->add_build();
ok($b1, "made test build 1");
my $b1_dir = $b1->data_directory;
ok(-d $b1_dir, "build directory is present: $b1_dir");

my $exit_code1 = Genome::Model::Build::Command::Remove->_execute_with_shell_params_and_return_exit_code('--', $b1->id);
is($exit_code1, 0, "command for removal of build succeeded");
isa_ok($b1,"UR::DeletedRef", "build object is deleted");
ok(!-d $b1_dir, "build directory is present: $b1_dir");

=cut

# THIS TESTS THE MODEL'S LAST_SUCCEEDED_BUILD METHOD, BUT DOES NOT WORK YET

my $bdir = Genome::Utility::FileSystem->create_temp_directory();
ok(-d $bdir, "temp directory is $bdir on $ENV{HOSTNAME}");

my $b1 = $m->add_build(id => -2, data_directory => "$bdir/b1");
ok($b1, "made test build 1");
$b1->start();
is($b1->status, 'Succeeded', "status is correct");

my $b2 = $m->add_build(id => -3, data_directory => "$bdir/b2");
ok($b2, "made test build 1");
$b2->start();
is($b2->status, 'Succeeded', "status is correct");

my $b3 = $m->add_build(id => -4, data_directory => "$bdir/b3");
ok($b3, "made test build 1");
$b3->start();
is($b3->status, 'Succeeded', "status is correct");

is($m->last_succeeded_build, $b3, "last_succeeded_build is correct");

my $exit_code1 = Genome::Model::Build::Command::Remove->_execute_with_shell_params_and_return_exit_code($b2->id);
is($exit_code1, 0, "removal of build 2 command succeeded");
isa($b2,"UR::DeletedRef");
is($m->last_succeeded_build, $b3, "last_succeeded_build is still correct");

my $exit_code2 = Genome::Model::Build::Command::Remove->_execute_with_shell_params_and_return_exit_code($b3->id);
is($exit_code2, 0, "removal of build 3 command succeeded");
isa($b3,"UR::DeletedRef");
is($m->last_succeeded_build, $b1, "last_succeeded_build is now build 1");

=cut

