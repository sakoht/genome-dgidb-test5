#!/gsc/bin/perl

use strict;
use warnings;

$ENV{UR_DBI_NO_COMMIT} = 1;
$ENV{UR_USE_DUMMY_AUTOGENERATED_IDS} = 1;

use Test::More tests => 14;

use above "Genome";

BEGIN {
    use_ok('Genome::ProcessingProfile::ReferenceAlignment');
}

my %params = (
              profile_name => 1,
              read_aligner_name => 'maq0_6_3',
              reference_sequence_name => 'test ref seq',
              dna_type => 'genomic dna',
              sequencing_platform => 'solexa',
              bare_args => [],
          );
my $create_ra = Genome::Model::Command::Create::ProcessingProfile::ReferenceAlignment->create(%params);

$create_ra->queue_status_messages(1);
$create_ra->dump_status_messages(0);
$create_ra->queue_error_messages(1);
$create_ra->dump_error_messages(0);
$create_ra->queue_warning_messages(1);
$create_ra->dump_warning_messages(0);

ok($create_ra->execute,'create first processing profile');

my @status_messages = $create_ra->status_messages();
my @warning_messages = $create_ra->warning_messages();
my @error_messages = $create_ra->error_messages();
my %get_params = %params;
delete $get_params{profile_name};
delete $get_params{bare_args};

is(scalar(@status_messages), 2, 'execute generated 2 status messages');
like($status_messages[1], qr(Processing Profile: $params{'profile_name'}), 'Printed processing profile name is correct');
# I'm not checking the other printed properties because the pretty printer puts
# ANSI color codes between some of the words.

is(scalar(@warning_messages), 0, 'execute correctly generated 0 warning messages');
is(scalar(@error_messages), 0, 'execute correctly generated 0 error messages');


my @ras = Genome::ProcessingProfile::ReferenceAlignment->get(%get_params);
is(scalar(@ras),1,"expected 1 reference alignment processing profile");

$params{profile_name}++;

$create_ra = Genome::Model::Command::Create::ProcessingProfile::ReferenceAlignment->create(%params);

$create_ra->queue_status_messages(1);
$create_ra->dump_status_messages(0);
$create_ra->queue_error_messages(1);
$create_ra->dump_error_messages(0);
$create_ra->queue_warning_messages(1);
$create_ra->dump_warning_messages(0);

ok(!$create_ra->execute,'correctly failed to create duplicate processing profile');

@status_messages = $create_ra->status_messages();
@warning_messages = $create_ra->warning_messages();
@error_messages = $create_ra->error_messages();
is(scalar(@status_messages), 0, 'execution correctly produced 0 status messages');
is(scalar(@warning_messages), 0, 'execution correctly produced 0 warning messages');
is(scalar(@error_messages), 2, 'execution correctly produced 2 error messages');
is($error_messages[0], 'A processing profile named 1 already exists with the same parameters. Processing profiles must be functionally unique.',
                       'error message 1 is correct');
is($error_messages[1], 'Failed to create processing_profile!',
                       'error message 2 is correct');

@ras = Genome::ProcessingProfile::ReferenceAlignment->get(%get_params);
is(scalar(@ras),1,"expected 1 reference alignment processing profile");
print $ras[0]->name ."\n";


exit;
