#!/usr/bin/env perl

use strict;
use warnings;

BEGIN {
    $ENV{UR_DBI_NO_COMMIT} = 1;
    $ENV{UR_USE_DUMMY_AUTOGENERATED_IDS} = 1;
}

use above 'Genome';
use Test::More tests => 22;

my $cmd_class = 'Genome::Model::Command::Define::ImportedReferenceSequence';
use_ok($cmd_class);

my $data_dir = File::Temp::tempdir('ImportedAnnotationTest-XXXXX', DIR => '/gsc/var/cache/testsuite/running_testsuites', CLEANUP => 1);
my $pp = Genome::ProcessingProfile::ImportedReferenceSequence->create(name => 'test_ref_pp');
my $patient = Genome::Individual->create(name => "test-patient", common_name => 'testpat');
my $sample = Genome::Sample->create(name => "test-patient", species_name => 'human', common_name => 'tumor', source => $patient);
ok($sample, 'created sample');

my $fasta_file = "$data_dir/data.fa";
my $fasta_fh = new IO::File(">$fasta_file");
$fasta_fh->write(">HI\nNACTGACTGNNACTGN");
$fasta_fh->close();

my @params = (
    "--fasta-file=$fasta_file",
    "--model-name=test-ref-seq-1",
    "--processing-profile-id=".$pp->id,
    "--species-name=human",
    "--subject-id=".$sample->id,
    "--version=42",
    );

my $rv = $cmd_class->_execute_with_shell_params_and_return_exit_code(@params);
is($rv, 0, 'executed command');
my $model = Genome::Model::ImportedReferenceSequence->get(name => 'test-ref-seq-1');
ok($model, 'Found newly created model');
my $build = $model->last_complete_build;
ok($build, 'Found a completed build');
is($build->version, 42, 'Build has correct version');

# specify coordinates_from
@params = (
    "--coordinates-from=".$build->name,
    "--fasta-file=$fasta_file",
    "--model-name=test-ref-seq-2",
    "--processing-profile-id=".$pp->id,
    "--species-name=human",
    "--subject-id=".$sample->id,
    "--version=26",
    );
$rv = $cmd_class->_execute_with_shell_params_and_return_exit_code(@params);
is($rv, 0, 'executed command');
my $coords_model = Genome::Model::ImportedReferenceSequence->get(name => 'test-ref-seq-2');
ok($coords_model, 'Found newly created model');
my $coords_build = $coords_model->last_complete_build;
ok($coords_build, 'Found a completed build');
is($coords_build->version, 26, 'Build has correct version');
is($coords_build->coordinates_from->id, $build->id, 'coordinates_from property is correct');
ok($coords_build->is_compatible_with($build), 'coordinates_from build is_compatible_with parent build');
ok($build->is_compatible_with($coords_build), 'parent build is_compatible_with coordinates_from build');

# specify a build derived_from another build which has coordinates_from yet another build
@params = (
    "--derived-from=".$coords_build->id,
    "--fasta-file=$fasta_file",
    "--model-name=test-ref-seq-3",
    "--processing-profile-id=".$pp->id,
    "--species-name=human",
    "--subject-id=".$sample->id,
    "--version=96",
    );
$rv = $cmd_class->_execute_with_shell_params_and_return_exit_code(@params);
is($rv, 0, 'executed command');
my $derived_model = Genome::Model::ImportedReferenceSequence->get(name => 'test-ref-seq-3');
ok($derived_model, 'Found newly created model');
my $derived_build = $derived_model->last_complete_build;
ok($derived_build, 'Found a completed build');
is($derived_build->version, 96, 'Build has correct version');
is($derived_build->derived_from->id, $coords_build->id, 'derived_from property is correct');
ok($derived_build->is_compatible_with($coords_build), 'derived build is_compatible_with parent build');
ok($coords_build->is_compatible_with($derived_build), 'derived build is_compatible_with parent build');
ok($derived_build->is_compatible_with($build), 'derived build is_compatible_with parent build');
ok($build->is_compatible_with($derived_build), 'parent build is_compatible_with derived build');
