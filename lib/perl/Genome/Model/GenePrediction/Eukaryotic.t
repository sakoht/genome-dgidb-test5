#! /gsc/bin/perl

use strict;
use warnings;

use above 'Genome';
use Test::More tests => 10;

BEGIN {
    $ENV{UR_DBI_NO_COMMIT} = 1;
    $ENV{UR_USE_DUMMY_AUTOGENERATED_IDS} = 1;
}

use_ok('Genome::Model::GenePrediction');
use_ok('Genome::Model::GenePrediction::Eukaryotic');
use_ok('Genome::ProcessingProfile::GenePrediction');
use_ok('Genome::ProcessingProfile::GenePrediction::Eukaryotic');

my $analysis_dir = "/gscmnt/277/analysis";
ok(-d $analysis_dir, "Analysis directory exists at $analysis_dir") or die "Could not access $analysis_dir"; 

my $test_contigs = '/gsc/var/cache/testsuite/data/Genome-Model-GenePrediction-Eukaryotic/short_ctg.dna';
ok(-e $test_contigs, "found test contigs at $test_contigs");

my $taxon = Genome::Taxon->create(
    name => 'egap_dummy_taxon',
    domain => 'Eukaryota',
    species_name => 'egap_dummy_species',
    species_latin_name => 'Egap Species',
    estimated_genome_size => 1000000,
);
ok($taxon, 'successfully created taxon');

# This will fail if somehow there's another processing profile just like this... I'm assuming
# that the absurdly low max_bases_per_fasta parameter will prevent this, but it'd be nice to have
# a more robust way of assuring there won't be a failure
my $processing_profile = Genome::ProcessingProfile::GenePrediction::Eukaryotic->create(
    name => 'dummy egap processing profile',
    domain => 'eukaryotic',
    max_bases_per_fasta => 100,
    rfamscan_version => '8.1',
    rnammer_version => '1.2',
    skip_masking_if_no_rna => 1,
    skip_repeat_masker => 1,
    xsmall => 0,
    snap_version => '2010-07-28',
);
ok($processing_profile, 'successfully created processing profile');

my $model = Genome::Model::GenePrediction::Eukaryotic->create(
    name => 'egap dummy model',
    processing_profile_id => $processing_profile->id,
    subject_id => $taxon->id,
    subject_class_name => 'Genome::Taxon',
    assembly_contigs_file => $test_contigs,
    repeat_library => '/gsc/var/lib/repeat/Ancylostoma_caninum-7.0_100524.newb.lib',
    snap_models => '/gscmnt/277/analysis/snap_model_files/A.canium.hmm,/gscmnt/277/analysis/snap_model_files/caninum_cegma.hmm',
    fgenesh_model => '/gsc/pkg/bio/softberry/Softberry_gf-2.1/sprog/C_elegans',
);
ok($model, 'successfully created model');

my $commit_rv = UR::Context->commit;
ok($commit_rv, "commit successful");
