#!/gsc/bin/perl

BEGIN { 
    $ENV{UR_DBI_NO_COMMIT} = 1;
    $ENV{UR_USE_DUMMY_AUTOGENERATED_IDS} = 1;
}

use strict;
use warnings;

use above "Genome";
use Test::More;

use_ok('Genome::Model::GenePrediction::Eukaryotic::MergePredictions') or die;

my $gene_count = 0;

my $test_output_dir = '/gsc/var/cache/testsuite/running_testsuites/';
ok(-d $test_output_dir, "test output dir exists at $test_output_dir") or die;

my $temp_dir_1 = File::Temp->tempdir(
    'egap_merge_predictions_XXXXXX',
    DIR => $test_output_dir,
);
my $temp_dir_2 = File::Temp->tempdir(
    'egap_merge_predictions_XXXXXX',
    DIR => $test_output_dir,
);

my @test_coding_genes;
for my $dir ($temp_dir_1, $temp_dir_2) {
    my $gene = create_coding_gene_for_dir($dir);
    ok($gene, 'created test coding gene prediction') or die;
    push @test_coding_genes, $gene;
}

my $temp_merge_dir = File::Temp->tempdir(
    'egap_merge_predictions_XXXXXX',
    DIR => $test_output_dir,
);

my $merger = Genome::Model::GenePrediction::Eukaryotic::MergePredictions->create(
    temp_prediction_directories => [$temp_dir_1, $temp_dir_2],
    prediction_directory => $temp_merge_dir,
);
ok($merger, 'successfully created merger object') or die;

my $merge_rv = $merger->execute;
ok($merge_rv, 'merger executed successfully!') or die;

Genome::Prediction::CodingGene->unload;
my @genes = Genome::Prediction::CodingGene->get(
    directory => $temp_merge_dir,
);
ok(@genes, "got coding genes back from merge directory $temp_merge_dir, as expected");
ok(@genes == @test_coding_genes, "got expected number of genes back from merge dir");

done_testing();

sub create_coding_gene_for_dir {
    my $dir = shift;
    my $gene = Genome::Prediction::CodingGene->create(
        gene_name => "test_gene_$gene_count",
        directory => $dir,
        fragment => 0,
        internal_stops => 0,
        missing_start => 0,
        missing_stop => 0,
        source => 'test',
        strand => '+',
        sequence_name => "test_gene_$gene_count",
        start => 1,
        end => 100,
    );
    $gene_count++;

    return $gene;
}
