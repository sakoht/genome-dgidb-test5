#!/usr/bin/env perl

use strict;
use warnings;

use Test::More;
use above 'Genome';


ok(init(), 'succesffully completed init');
ok(test_dependent_cron_ref_align(), 'successfully completed test_dependent_cron_ref_align');
done_testing();


sub init {
    ok($ENV{UR_DBI_NO_COMMIT} = 1, 'UR_DBI_NO_COMMIT is enabled') or die;
    ok($ENV{UR_USE_DUMMY_AUTOGENERATED_IDS} = 1, 'UR_USE_DUMMY_AUTOGENERATED_IDS is enabled') or die;

    use_ok('Genome::Model::GenotypeMicroarray') or die;

    return 1;
}


sub test_dependent_cron_ref_align {
    # test_dependent_cron_ref_align_init creates several models, see sub for more details
    ok(test_dependent_cron_ref_align_init(), 'successfully completed test_dependent_cron_ref_align_init') or return;

    my $gm_m = Genome::Model::GenotypeMicroarray->get(name => 'Test Genotype Microarray');
    isa_ok($gm_m, 'Genome::Model::GenotypeMicroarray', 'gm_m') or return;

    my @dependent_cron_ref_align = $gm_m->dependent_cron_ref_align;
    is(@dependent_cron_ref_align, 2, 'got two models from dependent_cron_ref_align') or return;
    is($dependent_cron_ref_align[0]->name, 'Another Test Build 36 Reference Alignment', 'other model was "Another Test Build 36 Reference Alignment"') or return;
    is($dependent_cron_ref_align[1]->name, 'Test Build 36 Reference Alignment', 'one model was "Test Build 36 Reference Alignment"') or return;

    return 1;
}


sub test_dependent_cron_ref_align_init {
    # this create several models needed to test the expected behavior of dependent_cron_ref_align
    # build 36 ref align and build 36 genotype - just as prep work
    # build 37 ref align - for testing compatible reference_sequence_build
    # build 36 ref align with alternate genotype_microarray_model and  alternate build 36 genotype - for testing existing genotype_microarray_model input

    my $ra_pp = Genome::ProcessingProfile::ReferenceAlignment->create(
        name => 'Test Reference Alignment Processing Profile',
        sequencing_platform => 'solexa',
        dna_type => 'genomic dna',
        read_aligner_name => 'bwa',
    );
    isa_ok($ra_pp, 'Genome::ProcessingProfile::ReferenceAlignment', 'ra_pp') or return;

    # only getting this real thing because the class is preventing me from creating one due to valid values
    my $gm_pp = Genome::ProcessingProfile::GenotypeMicroarray->get(name => 'infinium wugc');
    isa_ok($gm_pp, 'Genome::ProcessingProfile::GenotypeMicroarray', 'gm_pp') or return;

    my $individual = Genome::Individual->create(name => 'Test Individual');
    isa_ok($individual, 'Genome::Individual', 'created individual') or return;

    my $subject = Genome::Sample->create(name => 'Test Sample');
    isa_ok($subject, 'Genome::Sample', 'subject') or return;

    my $other_subject = Genome::Sample->create(name => 'Another Test Sample');
    isa_ok($other_subject, 'Genome::Sample', 'another test subject created') or return;

    my $library = Genome::Library->create(name => 'Test Sample Library', sample_id => $subject->id);
    isa_ok($library, 'Genome::Library', 'library') or return;

    my $other_library = Genome::Library->create(name => 'Another Test Library', sample_id => $other_subject->id);
    isa_ok($other_library, 'Genome::Library', 'other library') or return;

    my $genotype_data = Genome::InstrumentData::Imported->create(
        library => $library,
    );
    isa_ok($genotype_data, 'Genome::InstrumentData::Imported', 'genotype data') or return;

    $other_subject->default_genotype_data($genotype_data);

    my $build_36 = Genome::Model::Build::ReferenceSequence->get(name => 'NCBI-human-build36');
    isa_ok($build_36, 'Genome::Model::Build::ReferenceSequence', 'build_36') or return;

    my $build_37 = Genome::Model::Build::ReferenceSequence->get(name => 'GRCh37-lite-build37');
    isa_ok($build_37, 'Genome::Model::Build::ReferenceSequence', 'build_37') or return;

    my $gm_m = Genome::Model::GenotypeMicroarray->create(
        name => 'Test Genotype Microarray',
        processing_profile => $gm_pp,
        subject_id => $subject->id,
        subject_class_name => $subject->class,
        reference_sequence_build => $build_36,
        instrument_data => [$genotype_data],
    );
    isa_ok($gm_m, 'Genome::Model::GenotypeMicroarray', 'gm_m') or return;

    my $alt_gm_m = Genome::Model::GenotypeMicroarray->create(
        name => 'Test Alternate Genotype Microarray',
        processing_profile => $gm_pp,
        subject_id => $subject->id,
        subject_class_name => $subject->class,
        reference_sequence_build => $build_36,
    );
    isa_ok($alt_gm_m, 'Genome::Model::GenotypeMicroarray', 'alt_gm_m') or return;

    my $build_36_ref_align = Genome::Model::ReferenceAlignment->create(
        name => 'Test Build 36 Reference Alignment',
        processing_profile => $ra_pp,
        subject_id => $subject->id,
        subject_class_name => $subject->class,
        reference_sequence_build => $build_36,
        auto_assign_inst_data => 1,
    );
    isa_ok($build_36_ref_align, 'Genome::Model::ReferenceAlignment', 'build_36_ref_align') or return;

    my $other_build_36_ref_align = Genome::Model::ReferenceAlignment->create(
        name => 'Another Test Build 36 Reference Alignment',
        processing_profile => $ra_pp,
        subject_id => $other_subject->id,
        subject_class_name => $other_subject->class,
        reference_sequence_build => $build_36,
        auto_assign_inst_data => 1,
    );
    isa_ok($other_build_36_ref_align, 'Genome::Model::ReferenceAlignment', 'build_36_ref_align') or return;
    $other_build_36_ref_align->genotype_microarray_model(undef);

    my $build_36_ref_align_with_existing_gm_model = Genome::Model::ReferenceAlignment->create(
        name => 'Test Build 36 Reference Alignment with Genotype Microarray Model',
        processing_profile => $ra_pp,
        subject_id => $subject->id,
        subject_class_name => $subject->class,
        reference_sequence_build => $build_36,
        genotype_microarray_model => $alt_gm_m,
        auto_assign_inst_data => 1,
    );
    isa_ok($build_36_ref_align_with_existing_gm_model, 'Genome::Model::ReferenceAlignment', 'build_36_ref_align_with_existing_gm_model') or return;

    my $build_37_ref_align = Genome::Model::ReferenceAlignment->create(
        name => 'Test Build 37 Reference Alignment',
        processing_profile => $ra_pp,
        subject_id => $subject->id,
        subject_class_name => $subject->class,
        reference_sequence_build => $build_37,
        auto_assign_inst_data => 1,
    );
    isa_ok($build_37_ref_align, 'Genome::Model::ReferenceAlignment', 'build_37_ref_align') or return;

    return 1;
}
