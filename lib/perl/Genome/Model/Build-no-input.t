#!/usr/bin/env perl

use strict;
use warnings;

use above "Genome";

use Test::More;

$ENV{UR_DBI_NO_COMMIT} = 1;
$ENV{UR_USE_DUMMY_AUTOGENERATED_IDS} = 1;

use_ok('Genome::Model::Build') or die;

# SUB CLASSES TO TEST GENOME::MODEL
class Genome::ProcessingProfile::TesterNoBuilds {
    is => 'Genome::ProcessingProfile',
};

class Genome::ProcessingProfile::Tester {
    is => 'Genome::ProcessingProfile',
};
sub Genome::ProcessingProfile::Tester::_execute_build { return 1; };

class Genome::Model::TesterNoBuilds {
    is => 'Genome::Model',
};

class Genome::Model::Tester {
    is => 'Genome::Model',
    has => [
        tester_no_builds => {
            is => 'Text',
            via => 'inputs',
            to => 'value_id',
            where => [ name => 'tester_no_builds', 'value_class_name' => 'Genome::Model::TesterNoBuilds', ],
            is_mutable => 1,
            doc => 'Input required for this model to successfully start a build',
        },
    ],
};

class Genome::Model::Build::Tester {
    is => 'Genome::Model::Build',
};

# PP
my $ppnb = Genome::ProcessingProfile->create(
    name => 'Tester PP No Builds',
    type_name => 'tester_no_builds',
);
ok($ppnb, 'create processing profile for no-build model') or die;

my $pp = Genome::ProcessingProfile->create(
    name => 'Tester PP',
    type_name => 'tester',
);
ok($pp, 'create processing profile') or die;

# SUBJECT 
my $sample = Genome::Sample->create(
    id => -654321,
    name => 'TEST-00',
);
ok($sample, 'create sample') or die;

my $model_no_builds = Genome::Model->create(
    name => 'Tester Model With No Builds',
    processing_profile => $ppnb,
    subject_id => $sample->id,
    subject_class_name => $sample->class,
);
ok($model_no_builds, 'create model_no_builds');

my $model = Genome::Model->create(
    name => 'Tester Model',
    processing_profile => $pp,
    subject_id => $sample->id,
    subject_class_name => $sample->class,
);
ok($model, 'create model');

$model->add_input(
    name => 'tester_no_builds',
    value_class_name => 'Genome::Model::TesterNoBuilds', 
    value_id => $model_no_builds->id,
);
ok($model->tester_no_builds, 'model has a tester_no_builds input');

my $build = $model->create_build(
    model_id => $model->id,
);
ok($build, 'create build');
is($build->status, 'New', "build status is 'New'");

eval { $build->start(); };
like($@, qr/Failed to copy model inputs/, "build fails to start");
is($build->status, 'Unstartable', "build status is 'Unstartable'");

done_testing();
exit;

