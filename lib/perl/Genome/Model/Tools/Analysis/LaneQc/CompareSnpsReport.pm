package Genome::Model::Tools::Analysis::LaneQc::CompareSnpsReport;

use Genome;

class Genome::Model::Tools::Analysis::LaneQc::CompareSnpsReport {
    is => 'Genome::Command::Base',
    has => [
        instrument_data => {
            is => 'Genome::InstrumentData',
            is_many => 1,
            shell_args_position => 1,
            doc => 'Instrument data for which you want to see the compare SNPs lane QC. Resolved by Genome::Command::Base.',
        },
    ],
};


sub help_brief {
    'Aggregate Compare SNPs lane QC data.'
}


sub help_synopsis {
    'Aggregate Compare SNPs lane QC data for the provided instrument data.' . "\n"
}


sub help_detail {
    'Reads the Compare SNPs reports generated by lane QC and aggregates the results so you can see the combined results for a group of instrument data.'
}


sub execute {
    my $self = shift;

    my $header_line;
    my @instrument_data = $self->instrument_data;
    for my $instrument_data (@instrument_data) {
        my $lane_qc_dir = $instrument_data->lane_qc_dir;
        my $compare_snps_file = "$lane_qc_dir/compare_snps";
        my @compare_snps_lines = qx(head -n 2 $compare_snps_file);
        chomp(@compare_snps_lines);
        my $compare_snps_header = $compare_snps_lines[0];
        my $compare_snps_values = $compare_snps_lines[1];

        unless ($header_line) {
            $header_line = $compare_snps_header;
            print $header_line . "\n";
        }
    
        if ($header_line && $header_line ne $compare_snps_header) {
            die 'header mismatch: ' . $compare_snps_file . "\n";
        }

        my $instrument_data_name = $instrument_data->__display_name__;
        $compare_snps_values =~ s/^\S+/$instrument_data_name/;
        print $compare_snps_values . "\n";
    }

    return 1;
}
