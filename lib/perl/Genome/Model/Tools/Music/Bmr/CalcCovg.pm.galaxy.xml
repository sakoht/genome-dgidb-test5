<tool id="gmt_music_bmr_calc-covg" name="gmt_music_bmr_calc-covg">
    <description>
        Uses calcRoiCovg.c to count covered bases per-gene for each given tumor-normal pair of BAMs.
    </description>
    <command>
        gmt music bmr calc-covg --bam-list=$bam_list --cmd-list-file=$cmd_list_file --cmd-prefix=$cmd_prefix --id=$id --is-executed=$is_executed --min-mapq=$min_mapq --normal-min-depth=$normal_min_depth --output-dir=$output_dir --reference-sequence=$reference_sequence --result=$result --roi-file=$roi_file --tumor-min-depth=$tumor_min_depth
    </command>
    <inputs>
        <param name="bam_list" format="text" type="data" help="" />
<param name="cmd_list_file" format="text" type="data" help="" />
<param name="cmd_prefix" format="text" type="data" help="" />
<param name="min_mapq" format="text" type="data" help="" />
<param name="normal_min_depth" format="text" type="data" help="" />
<param name="output_dir" format="text" type="data" help="" />
<param name="reference_sequence" format="text" type="data" help="" />
<param name="roi_file" format="text" type="data" help="" />
<param name="tumor_min_depth" format="text" type="data" help="" />

    </inputs>
    <outputs>
        <data name="result" format="text" label="" help="" />

    </outputs>
    <help>
        

**USAGE**

 gmt music bmr calc-covg --bam-list=? --output-dir=? --reference-sequence=? --roi-file=?
    [--cmd-list-file=?] [--cmd-prefix=?] [--min-mapq=?] [--normal-min-depth=?]
    [--tumor-min-depth=?]


**SYNOPSIS**

General usage:

 ... music bmr calc-covg \
    --bam-list input_dir/bam_list \
    --output-dir output_dir/ \
    --reference-sequence input_dir/all_sequences.fa \
    --roi-file input_dir/all_coding_exons.tsv

To create a list of commands that will allow the processing of each tumor-normal pair in parallel
with an LSF job scheduler:

 ... music bmr calc-covg \
    --bam-list input_dir/bam_list \
    --output-dir output_dir/ \
    --reference-sequence input_dir/all_sequences.fa \
    --roi-file input_dir/all_coding_exons.tsv \
    --cmd_list_file parallelizable_commands \
    --cmd_prefix bsub

In the above case, the commands printed into the output file "parallelizable_commands" can be run
in parallel. After they complete, rerun this script as printed directly below (--cmd_list_file
and --cmd_prefix have been removed) to merge the parallelized calculations:

 ... music bmr calc-covg \
    --bam-list input_dir/bam_list \
    --output-dir output_dir/ \
    --reference-sequence input_dir/all_sequences.fa \
    --roi-file input_dir/all_coding_exons.tsv


**REQUIRED ARGUMENTS**

  bam-list   Text
    Tab delimited list of BAM files [sample_name normal_bam tumor_bam] (See Description) 
  output-dir   Text
    Directory where output files and subdirectories will be written 
  reference-sequence   Text
    Path to reference sequence in FASTA format 
  roi-file   Text
    Tab delimited list of ROIs [chr start stop gene_name] (See Description) 


**OPTIONAL ARGUMENTS**

  cmd-list-file   Text
    A file to write calcRoiCovg commands to (See Description) 
  cmd-prefix   Text
    A command that submits a job to your cluster (See Description) 
  min-mapq   Integer
    The minimum mapping quality of reads to consider towards read depth counts 
    Default value '20' if not specified
  normal-min-depth   Integer
    The minimum read depth to consider a Normal BAM base as covered 
    Default value '6' if not specified
  tumor-min-depth   Integer
    The minimum read depth to consider a Tumor BAM base as covered 
    Default value '8' if not specified


**DESCRIPTION**

    This script counts bases with sufficient coverage in the ROIs of each gene in the given pairs
    of tumor-normal BAM files and categorizes them into - AT, CG (non-CpG), and CpG counts. It also
    adds up these base-counts across all ROIs of each gene for each sample, but covered bases that
    lie within overlapping ROIs are not counted more than once towards these total counts.

    By default, this script runs a C-based tool named calcRoiCovg for each sample one after
    another, taking ~30 mins per sample to generate per-ROI covered base counts. If the results of
    calcRoiCovg for a sample already exists in the output subdirectory roi_covgs, re-calculation is
    skipped. This allows you to run your own calcRoiCovg jobs in parallel or on multiple machines
    (Keep reading).

    Speed things up by running calcRoiCovg jobs in parallel: If a compute cluster or multiple
    machines are available, run this script twice as follows:

      * Define cmd-list-file and cmd-prefix to generate a file with commands that can be submitted
      to a cluster or run manually. These jobs will write per-ROI base counts in a subdirectory
      roi_covgs.

      * After all the parallelized calcRoiCovg jobs are completed, run this script again to add
      them up and generate the final per-gene base counts in a subdirectory gene_covgs. Remember to
      remove the cmd-list-file and cmd-prefix arguments or you will just be re-creating a list of
      commands.



**ARGUMENTS**


    --roi-file

      The regions of interest (ROIs) of each gene are typically regions targeted for sequencing or
      are merged exon loci (from multiple transcripts) of genes with 2-bp flanks (splice
      junctions). ROIs from the same chromosome must be listed adjacent to each other in this file.
      This allows the underlying C-based code to run much more efficiently and avoid re-counting
      bases seen in overlapping ROIs (for overall covered base counts). For per-gene base counts,
      an overlapping base will be counted each time it appears in an ROI of the same gene. To avoid
      this, be sure to merge together overlapping ROIs of the same gene. BEDtools' mergeBed can
      help if used per gene.

    --reference-sequence

      The reference sequence in FASTA format. If a reference sequence index is not found next to
      this file (a .fai file), it will be created.

    --bam-list

      Provide a file containing sample names and normal/tumor BAM locations for each. Use the tab-
      delimited format [sample_name normal_bam tumor_bam] per line. Additional columns like
      clinical data are allowed, but ignored. The sample_name must be the same as the tumor sample
      names used in the MAF file (16th column, with the header Tumor_Sample_Barcode).

    --output-dir

      Specify an output directory where the following will be created/written: roi_covgs:
      Subdirectory containing per-ROI covered base counts for each sample. gene_covgs: Subdirectory
      containing per-gene covered base counts for each sample. total_covgs: File containing the
      overall non-overlapping coverages per sample.

    --cmd-list-file

      Specify a file into which a list of calcRoiCovg jobs will be written to. These can be
      scheduled in parallel, and will write per-ROI covered base-counts into the output
      subdirectory roi_covgs. If cmd-list-file is left unspecified, this script runs calcRoiCovg
      per sample one after another, taking ~30 mins per sample, but it skips samples whose output
      is already in roi_covgs.

    --cmd-prefix

      Specify a job submission command that will be prefixed to each command in cmd-list-file. This
      makes batch submission easier. Just run the cmd-list-file file as a shell script to submit
      jobs. cmd-prefix is "bsub" if your cluster uses the LSF job scheduler, or "qsub" in Torque.
      Add arguments as necessary. For example, "bsub -M 4GB" sets a soft memory limit of 4GB.




    </help>
</tool>
