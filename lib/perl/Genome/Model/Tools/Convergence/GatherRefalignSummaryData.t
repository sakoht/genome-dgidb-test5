#!/usr/bin/env perl

use strict;
use warnings;

use above "Genome";
use Test::More tests => 11;

$ENV{UR_DBI_NO_COMMIT} = 1;
$ENV{UR_USE_DUMMY_AUTOGENERATED_IDS} = 1;

use constant TEST_DATA_DIR => '/gsc/var/cache/testsuite/data/Genome-Model-Tools-Convergence-GatherRefalignSummaryData/';

use constant EXPECTED_DATA => {
  'haploid_coverage' => '31.072',
  'build_id' => '101057421',
  'unfiltered_dbsnp_concordance' => '77.08%',
  'lane_count' => '18',
  'unfiltered_snp_calls' => '4,500,450',
  'filtered_snp_calls' => '3,468,651',
  'filtered_dbsnp_concordance' => '90.61%',
  'unfiltered_diploid_heterozygous_percentage' => 'Not Available',
  'filtered_diploid_heterozygous_percentage' => 'Not Available',
};

my $test_build = setup_test_build();  #A lot of objects have to be created to create a build!

my $gather_data_cmd = Genome::Model::Tools::Convergence::GatherRefalignSummaryData->create(
    build_id => $test_build->id,
);
ok($gather_data_cmd, 'Created data gathering command.');
ok($gather_data_cmd->execute, 'Executed data gathering command.');

my $result_data = $gather_data_cmd->data;
ok($result_data, 'Got data back from command.');
is_deeply($result_data, EXPECTED_DATA, 'Data returned matches expected result.');


# Create a test build and all of its prerequisites
sub setup_test_build {
    my $test_profile = Genome::ProcessingProfile::ReferenceAlignment->create(
        name => 'test_profile',
        sequencing_platform => 'solexa',
        dna_type => 'cdna',
        read_aligner_name => 'bwa',
        snv_detection_strategy => 'samtools',
    ); 
    ok($test_profile, 'created test processing profile');
    
    my $test_sample = Genome::Sample->create(
        name => 'test_subject',
    );
    ok($test_sample, 'created test sample');
    
    my $test_instrument_data = Genome::InstrumentData::Solexa->create(
    );
    ok($test_instrument_data, 'created test instrument data');
    
    my $reference_sequence_build = Genome::Model::Build::ImportedReferenceSequence->get(name => 'NCBI-human-build36');
    isa_ok($reference_sequence_build, 'Genome::Model::Build::ImportedReferenceSequence') or die;

    my $test_model = Genome::Model->create(
        name => 'test_reference_aligment_model_mock',
        subject_name => 'test_subject',
        subject_type => 'sample_name',
        processing_profile_id => $test_profile->id,
        reference_sequence_build => $reference_sequence_build,
    );
    ok($test_model, 'created test model');
    ok($test_model->add_instrument_data($test_instrument_data), 'added inst data');
    
    #TODO Once we're using inputs, just use this line instead
    #ok($test_model->add_inst_data($test_instrument_data), 'assigned data to model');
    
    my $test_build = Genome::Model::Build->create(
        model_id => $test_model->id,
        data_directory => TEST_DATA_DIR . '/build_dir',
    );
    ok($test_build, 'created test build');
    
    return $test_build;
}
