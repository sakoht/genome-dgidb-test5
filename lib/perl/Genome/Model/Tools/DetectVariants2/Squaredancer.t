#!/usr/bin/env perl

use strict;
use warnings;

BEGIN {
    $ENV{NO_LSF} = 1;
    $ENV{UR_DBI_NO_COMMIT} = 1;
    $ENV{UR_USE_DUMMY_AUTOGENERATED_IDS} = 1;
};

use above 'Genome';
use Genome::SoftwareResult;

use Test::More;
use File::Compare;

my $archos = `uname -a`;
if ($archos !~ /64/) {
    plan skip_all => "Must run from 64-bit machine";
}

use_ok('Genome::Model::Tools::DetectVariants2::Squaredancer');

my $refbuild_id = 101947881;
my $ref_seq_build = Genome::Model::Build::ImportedReferenceSequence->get($refbuild_id);
ok($ref_seq_build, 'human36 reference sequence build') or die;

no warnings;
# Override lock name because if people cancel tests locks don't get cleaned up.
*Genome::SoftwareResult::_resolve_lock_name = sub {
    return Genome::Sys->create_temp_file_path;
};
use warnings;

my $test_dir = '/gsc/var/cache/testsuite/data/Genome-Model-Tools-DetectVariants2-Squaredancer';
my $test_base_dir = File::Temp::tempdir('DetectVariants2-Squaredancer-XXXXX', DIR => '/gsc/var/cache/testsuite/running_testsuites/', CLEANUP => 1);
my $test_working_dir = "$test_base_dir/output";

my $normal_bam = $test_dir . '/normal.bam';
my $tumor_bam  = $test_dir . '/tumor.bam';
my $bd_cfg     = $test_dir . '/breakdancer_config';

my $chromosome = 22;
my $expected_output = join "/", ($test_dir, 'Squaredancer.out');
my $test_out   = $test_working_dir . '/svs.hq';

my $version = '0.1';
note("use squaredancer version: $version");

my $command = Genome::Model::Tools::DetectVariants2::Squaredancer->create(
    reference_build_id => $refbuild_id,
    aligned_reads_input => $tumor_bam,
    control_aligned_reads_input => $normal_bam,
    version => $version,
    config_file => $bd_cfg,
    output_directory => $test_working_dir,
);
ok($command, 'Created `gmt detect-variants2 squaredancer` command');
$command->dump_status_messages(1);
ok($command->execute, 'Executed `gmt detect-variants2 squaredancer` command');


# Exclude the file path in output to make sure this test does not fail when paths change
my $expected_output_text = `cat $expected_output | cut -s -f11 --complement`;
my $test_output_text = `cat $test_out | cut -s -f11 --complement`;

my $diff = Genome::Sys->diff_text_vs_text($expected_output_text, $test_output_text);
ok(!$diff, "svs.hq output as expected");

done_testing();
exit;
