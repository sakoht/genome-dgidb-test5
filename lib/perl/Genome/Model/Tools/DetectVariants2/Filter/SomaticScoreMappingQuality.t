#!/gsc/bin/perl

use strict;
use warnings;

use above "Genome";
use Test::More;
use File::Compare;

$ENV{UR_DBI_NO_COMMIT} = 1;
$ENV{UR_USE_DUMMY_AUTOGENERATED_IDS} = 1;

BEGIN {
    my $archos = `uname -a`;
    if ($archos !~ /64/) {
        plan skip_all => "Must run from 64-bit machine";
    } else {
        plan tests => 19;
    }
};

use_ok( 'Genome::Model::Tools::DetectVariants2::Filter::SomaticScoreMappingQuality');

my $test_input_dir  = '/gsc/var/cache/testsuite/data/Genome-Model-Tools-DetectVariants2-Filter-SomaticScoreMappingQuality/';
my $refseq = Genome::Config::reference_sequence_directory() . '/NCBI-human-build36/all_sequences.fa';
my $tumor_bam_file  = $test_input_dir . 'tumor.tiny.bam';

my $map50_somatic50_expected = $test_input_dir . 'map50_somatic50.bed';
my $map10_somatic50_expected = $test_input_dir . 'map10_somatic50.bed';
my $map10_somatic80_expected = $test_input_dir . 'map10_somatic80.bed';

my $map50_somatic50_expected_lq = $test_input_dir . 'map50_somatic50.lq.bed';
my $map10_somatic50_expected_lq = $test_input_dir . 'map10_somatic50.lq.bed';
my $map10_somatic80_expected_lq = $test_input_dir . 'map10_somatic80.lq.bed';

my $test_output_dir = File::Temp::tempdir('Genome-Model-Tools-DetectVariants2-Filter-SomaticScoreMappingQuality-XXXXX', DIR => '/gsc/var/cache/testsuite/running_testsuites', CLEANUP => 1);

# Test default cutoffs
my $output_file_default     = $test_output_dir . '/snvs.hq.bed';
my $high_confidence_default = Genome::Model::Tools::DetectVariants2::Filter::SomaticScoreMappingQuality->create(
    input_directory     => $test_input_dir,
    aligned_reads_input => $tumor_bam_file,
    output_directory    => $test_output_dir,
    reference_sequence_input => $refseq,
);

ok($high_confidence_default, 'created SomaticScoreMappingQuality object (default mapping & somatic quality)');
ok($high_confidence_default->execute(), 'executed SomaticScoreMappingQuality object');
ok(-e $output_file_default, 'generated an (possibly empty) output file');

# Test mapping quality 50, somatic quality 50, and verify the contents of the hq and lq files
$test_output_dir = File::Temp::tempdir('Genome-Model-Tools-DetectVariants2-Filter-SomaticScoreMappingQuality-XXXXX', DIR => '/gsc/var/cache/testsuite/running_testsuites', CLEANUP => 1);
my $output_file_m50_s50     = $test_output_dir . '/snvs.hq.bed';
my $lq_output_file_m50_s50     = $test_output_dir . '/snvs.lq.bed';
my $high_confidence_m50_s50 = Genome::Model::Tools::DetectVariants2::Filter::SomaticScoreMappingQuality->create(
    input_directory     => $test_input_dir,
    aligned_reads_input => $tumor_bam_file,
    output_directory    => $test_output_dir,
    reference_sequence_input => $refseq,
    min_mapping_quality => 50,
    min_somatic_quality => 50,
);

ok($high_confidence_m50_s50, 'created SomaticScoreMappingQuality object (quality minima: mapping 50, quality 50)');
ok($high_confidence_m50_s50->execute(), 'executed SomaticScoreMappingQuality object');
ok(-s $output_file_m50_s50, 'generated an output file');
print "diffing $output_file_m50_s50, $map50_somatic50_expected $lq_output_file_m50_s50, $map50_somatic50_expected_lq\n";
is(compare($output_file_m50_s50, $map50_somatic50_expected), 0, 'output matched expected output');
is(compare($lq_output_file_m50_s50, $map50_somatic50_expected_lq), 0, 'output matched expected output for lq file');

# Test mapping quality 10, somatic quality 50, and verify the contents of the hq and lq files
$test_output_dir = File::Temp::tempdir('Genome-Model-Tools-DetectVariants2-Filter-SomaticScoreMappingQuality-XXXXX', DIR => '/gsc/var/cache/testsuite/running_testsuites', CLEANUP => 1);
my $output_file_m10_s50     = $test_output_dir . '/snvs.hq.bed';
my $lq_output_file_m10_s50     = $test_output_dir . '/snvs.lq.bed';
my $high_confidence_m10_s50 = Genome::Model::Tools::DetectVariants2::Filter::SomaticScoreMappingQuality->create(
    input_directory     => $test_input_dir,
    aligned_reads_input => $tumor_bam_file,
    output_directory    => $test_output_dir,
    reference_sequence_input => $refseq,
    min_mapping_quality => 10,
    min_somatic_quality => 50,
);

ok($high_confidence_m10_s50, 'created SomaticScoreMappingQuality object (quality minima: mapping 10, quality 50)');
ok($high_confidence_m10_s50->execute(), 'executed SomaticScoreMappingQuality object');
ok(-s $output_file_m10_s50, 'generated an output file');
print "diffing $output_file_m10_s50, $map10_somatic50_expected $lq_output_file_m10_s50, $map10_somatic50_expected_lq\n";
is(compare($output_file_m10_s50, $map10_somatic50_expected), 0, 'output matched expected output');
is(compare($lq_output_file_m10_s50, $map10_somatic50_expected_lq), 0, 'output matched expected output for lq file');

# Test mapping quality 10, somatic quality 80, and verify the contents of the hq and lq files
$test_output_dir = File::Temp::tempdir('Genome-Model-Tools-DetectVariants2-Filter-SomaticScoreMappingQuality-XXXXX', DIR => '/gsc/var/cache/testsuite/running_testsuites', CLEANUP => 1);

my $output_file_m10_s80     = $test_output_dir . '/snvs.hq.bed';
my $lq_output_file_m10_s80     = $test_output_dir . '/snvs.lq.bed';
my $high_confidence_m10_s80 = Genome::Model::Tools::DetectVariants2::Filter::SomaticScoreMappingQuality->create(
    input_directory     => $test_input_dir,
    aligned_reads_input => $tumor_bam_file,
    output_directory    => $test_output_dir,
    reference_sequence_input => $refseq,
    min_mapping_quality => 10,
    min_somatic_quality => 80,
);

ok($high_confidence_m10_s80, 'created SomaticScoreMappingQuality object (quality minima: mapping 10, quality 80)');
ok($high_confidence_m10_s80->execute(), 'executed SomaticScoreMappingQuality object');
ok(-s $output_file_m10_s80, 'generated an output file');
is(compare($output_file_m10_s80, $map10_somatic80_expected), 0, 'output matched expected output');
is(compare($lq_output_file_m10_s80, $map10_somatic80_expected_lq), 0, 'output matched expected output for lq file');
