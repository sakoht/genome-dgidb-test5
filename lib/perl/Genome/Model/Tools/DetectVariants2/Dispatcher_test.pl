#!/usr/bin/env perl

use strict;
use warnings;

BEGIN {
    $ENV{UR_DBI_NO_COMMIT}=1;
    $ENV{UR_USE_DUMMY_AUTOGENERATED_IDS}=1;
}

use Parse::RecDescent qw/RD_ERRORS RD_WARN RD_TRACE/;
use Data::Dumper;
use Test::More tests => 5;
use above 'Genome';
use Genome::SoftwareResult;

#Parsing tests
my $det_class_base = 'Genome::Model::Tools::DetectVariants2';
my $dispatcher_class = "${det_class_base}::Dispatcher";
use_ok($dispatcher_class);

# hash of strings => expected output hash

my $bam = "/gscmnt/ams1123/info/model_data/2876913561/build112544010/alignments/112179608.bam";
# Test dispatcher for running a complex case -- the intersect is nonsensical, but tests intersections while still keeping the test short
my $test_working_dir = File::Temp::tempdir('DetectVariants2-Dispatcher-combineXXXXX', DIR => '/gsc/var/cache/testsuite/running_testsuites/', CLEANUP => 1);
my $combine_test = $dispatcher_class->create(
    snv_detection_strategy => 'samtools r963 filtered by snp-filter v1',
    indel_detection_strategy => 'samtools r963 filtered by indel-filter v1',
    output_directory => $test_working_dir,
    reference_build_id => 101947881,
    aligned_reads_input => $bam,
);
ok($combine_test, "Object to test a combine case created");
ok($combine_test->execute, "Test executed successfully");

#sleep 10000000000;
done_testing();
