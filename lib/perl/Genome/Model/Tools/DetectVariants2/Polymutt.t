#!/usr/bin/env perl

BEGIN {
    $ENV{NO_LSF} = 1;
    $ENV{UR_DBI_NO_COMMIT} = 1;
    $ENV{UR_USE_DUMMY_AUTOGENERATED_IDS} = 1;
};

use strict;
use warnings;

use above 'Genome';

use Test::More;

if (Genome::Config->arch_os ne 'x86_64') {
    plan skip_all => 'requires 64-bit machine';
}
else {
    plan tests => 18;
}

use_ok('Genome::Model::Tools::DetectVariants2::::Polymutt');
my $version = "0.02";

# TODO This test should define alignment results rather than relying on existing ones
my @test_alignment_result_ids = qw(121781692 121781691 121781695);
my @test_alignment_results = Genome::InstrumentData::AlignmentResult::Merged->get(\@test_alignment_result_ids);
is(scalar(@test_alignment_results), 3, "Got 3 test alignment results");

my $test_data_dir = '/gsc/var/cache/testsuite/data/Genome-Model-Tools-DetectVariants2-Polymutt';
my $ped_file = "$test_data_dir/DS10239.ped";
my $expected_dir = join('/', $test_data_dir, 'expected.v1');

my $detector_directory = join('/', $test_data_dir, 'polymutt-0.02');

my $expected_denovo_vcf_file = join('/', $expected_dir, 'snvs.denovo.vcf.gz');
my $expected_standard_vcf_file = join('/', $expected_dir, 'snvs.standard.vcf.gz');
my $expected_dat_file = join('/', $expected_dir, 'polymutt.dat');
my $expected_glfindex_file = join('/', $expected_dir, 'polymutt.glfindex');
my $expected_merged_vcf = join('/', $expected_dir, 'snvs.vcf.gz');

ok(-s $expected_denovo_vcf_file, "expected denovo vcf file output $expected_denovo_vcf_file exists");
ok(-s $expected_standard_vcf_file, "expected standard vcf file output $expected_standard_vcf_file exists");
ok(-s $expected_dat_file, "expected dat file output $expected_dat_file exists");
ok(-s $expected_glfindex_file, "expected glfindex file output $expected_glfindex_file exists");
ok(-s $expected_merged_vcf, "expected merged vcf file output $expected_merged_vcf exists");

my $output_dir = File::Temp::tempdir('DetectVariants2-PolymuttXXXXX', DIR => '/gsc/var/cache/testsuite/running_testsuites/', CLEANUP => 1);
my $output_denovo_vcf = join('/', $output_dir, 'snvs.denovo.vcf.gz');
my $output_standard_vcf = join('/', $output_dir, 'snvs.standard.vcf.gz');
my $output_dat = join('/', $output_dir, 'polymutt.dat');
my $output_glfindex = join('/', $output_dir, 'polymutt.glfindex');
my $output_merged_vcf = join("/", $output_dir, 'snvs.vcf.gz');
my $reference = Genome::Model::Build::ImportedReferenceSequence->get_by_name('NCBI-human-build36');
is($reference->id,101947881, 'Found correct reference sequence');

my $detector_command = Genome::Model::Tools::DetectVariants2::Polymutt->create(
    version => $version,
    alignment_results => \@test_alignment_results,
    output_directory => $output_dir,
    reference_build_id => $reference->id,
    pedigree_file_path => $ped_file,
);

$detector_command->dump_status_messages(1);
isa_ok($detector_command, 'Genome::Model::Tools::DetectVariants2::Polymutt', 'created detector command');
ok($detector_command->execute(), 'executed detector command');
ok(-s $output_denovo_vcf, "denovo vcf output exists and has size");
ok(-s $output_standard_vcf, "standard vcf output exists and has size");
ok(-s $output_dat , "dat output exists and has size");
ok(-s $output_glfindex , "glfindex output exists and has size");
ok(-s $output_merged_vcf, "(denovo + standard) merged vcf output exists and has size");


my $expected_denovo_text = `zcat $expected_denovo_vcf_file | grep -v '^##fileDate'`;
my $test_denovo_text = `zcat $output_denovo_vcf | grep -v '^##fileDate'`;

my $output_denovo_diff = Genome::Sys->diff_text_vs_text($expected_denovo_text, $test_denovo_text);
ok(!$output_denovo_diff, 'denovo output file matches expected result')
    or diag("diff:\n" . $output_denovo_diff);

my $expected_standard_text = `zcat $expected_standard_vcf_file | grep -v '^##fileDate'`;
my $test_standard_text = `zcat $output_standard_vcf | grep -v '^##fileDate'`;

my $output_standard_diff = Genome::Sys->diff_text_vs_text($expected_standard_text, $test_standard_text);
ok(!$output_standard_diff, 'standard output file matches expected result')
    or diag("diff:\n" . $output_standard_diff);


my $expected_merged_text = `zcat $expected_merged_vcf | grep -v '^##fileDate'`;
my $test_merged_text = `zcat $output_merged_vcf | grep -v '^##fileDate'`;


my $output_merged_diff = Genome::Sys->diff_text_vs_text($expected_merged_text, $test_merged_text);
ok(!$output_merged_diff, 'merged output file matches expected result')
    or diag("diff:\n" . $output_merged_diff);
