#!/usr/bin/env perl
use strict;
use warnings;

BEGIN {
    $ENV{UR_DBI_NO_COMMIT} = 1;
    $ENV{UR_USE_DUMMY_AUTOGENERATED_IDS} = 1;
};

use above 'Genome';
use Test::More;

my $data_dir = "/gsc/var/cache/testsuite/data/Genome-Model-RnaSeq-DetectFusionsResult-ChimerascanResult";
my $tophat_data = $data_dir . "/tophat_data/";


my $t = Genome::Taxon->__define__(name => 'human');
my $p = Genome::Individual->create(name => "test-human-patient", common_name => 'testpatient', taxon => $t);
my $s = Genome::Sample->create(name => "test-human-patient", common_name => 'tumor', source => $p);
ok($s, 'created sample');
my ($species_names, $versions) = @_;

my $ref_pp = Genome::ProcessingProfile::ImportedReferenceSequence->create(name => 'test_ref_pp');

my $ref_model = Genome::Model::ImportedReferenceSequence->create(
    name                => "test_ref_sequence_human",
    processing_profile  => $ref_pp,
    subject_class_name  => ref($s),
    subject_id          => $s->id,
);
ok($ref_model, "created reference sequence model (human)");

my $reference_build = Genome::Model::Build::ImportedReferenceSequence->create(
    name            => "ref_sequence_$s-37",
    model           => $ref_model,
    fasta_file      => 'turkey_sammich',
    data_directory  => "$data_dir/ref",
    version         => '37',
);

my $alignment_result = Genome::InstrumentData::AlignmentResult::Tophat->__define__(
    aligner_name => 'tophat',
    output_dir => $tophat_data,
    reference_build_id => $reference_build->id,
    bowtie_version => '0.12.7'
);

my $index = Genome::Model::RnaSeq::DetectFusionsResult::ChimerascanResult::Index->__define__(
    version => "0.4.3",
    bowtie_version => "0.12.7",
    reference_build => $reference_build,
    output_dir => '/gsc/var/cache/testsuite/data/Genome-Model-RnaSeq-DetectFusionsResult-ChimerascanResult/IndexResult/'
);

my $result = Genome::Model::RnaSeq::DetectFusionsResult::ChimerascanResult->get_or_create(
    alignment_result => $alignment_result,
    version => '0.4.3',
    detector_params => "",
);

isa_ok($result, "Genome::Model::RnaSeq::DetectFusionsResult::ChimerascanResult");

done_testing();
