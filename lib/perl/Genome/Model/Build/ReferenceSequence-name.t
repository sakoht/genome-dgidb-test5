use strict; use warnings;

BEGIN {
    $ENV{UR_DBI_NO_COMMIT} = 1;
    $ENV{UR_USE_DUMMY_AUTOGENERATED_IDS} = 1;
}

use above "Genome";
use Test::More tests => 6;
use_ok('Genome::Model::Build::ReferenceSequence');

# create a test annotation build and a few reference sequence builds to test compatibility with
my $data_dir = File::Temp::tempdir('ImportedAnnotationTest-XXXXX', DIR => '/gsc/var/cache/testsuite/running_testsuites', CLEANUP => 1);
my $taxon = Genome::Taxon->__define__(name => 'human');
my $individual = Genome::Individual->create(name => "test-patient", common_name => 'testpatient', taxon => $taxon);
my $sample = Genome::Sample->create(name => "test-patient", common_name => 'tumor', source => $individual);
ok($sample, 'created sample');

my $pp = Genome::ProcessingProfile::ReferenceSequence->create(name => 'test_ref_pp');
my $model = Genome::Model::ReferenceSequence->create(
    name                => "test_ref_sequence",
    processing_profile  => $pp,
    subject_class_name  => ref($sample),
    subject_id          => $sample->id,
);
ok($model, "created reference sequence model");

my $build = Genome::Model::Build::ReferenceSequence->create(
    model_id => $model->id,
    data_directory => $data_dir,
    version => "123",
    fasta_file => "$data_dir/foo.fa"
    );
ok($build, "created build");
is($build->name, "test_ref_sequence-build123", "build name is correct");

$build = Genome::Model::Build::ReferenceSequence->get(name => $build->name);
ok($build, "looked up build by name");

done_testing();
