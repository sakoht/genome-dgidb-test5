#!/usr/bin/env perl

BEGIN {
    $ENV{UR_DBI_NO_COMMIT} = 1;
    $ENV{UR_USE_DUMMY_AUTOGENERATED_IDS} = 1;
};

use strict;
use warnings;

use above 'Genome';

require File::Compare;
use Test::More;

if (Genome::Config->arch_os ne 'x86_64') {
    plan skip_all => 'requires 64-bit machine';
}

use_ok('Genome::Model::Build::DeNovoAssembly::Abyss') or die;

my $base_dir = '/gsc/var/cache/testsuite/data/Genome-Model/DeNovoAssembly';
my $archive_path = $base_dir.'/inst_data/-7777/archive.tgz';
ok(-s $archive_path, 'inst data archive path') or die;
my $example_version = '1';
my $example_dir = $base_dir.'/abyss_v'.$example_version;
ok(-d $example_dir, 'example dir') or die;
my $tmpdir = File::Temp::tempdir(CLEANUP => 1);

my $taxon = Genome::Taxon->create(
    name => 'Escherichia coli TEST',
    domain => 'Bacteria',
    current_default_org_prefix => undef,
    estimated_genome_size => 4500000,
    current_genome_refseq_id => undef,
        ncbi_taxon_id => undef,
        ncbi_taxon_species_name => undef,
    species_latin_name => 'Escherichia coli',
    strain_name => 'TEST',
);
ok($taxon, 'taxon') or die;
my $sample = Genome::Sample->create(
    id => -1234,
    name => 'TEST-000',
    taxon_id => $taxon->id,
);
ok($sample, 'sample') or die;
my $library = Genome::Library->create(
    id => -12345,
    name => $sample->name.'-testlibs',
    sample_id => $sample->id,
);
ok($library, 'library') or die;

my $instrument_data = Genome::InstrumentData::Solexa->create(
    id => -7777,
    sequencing_platform => 'solexa',
    read_length => 100,
    subset_name => '8-CGATGT',
    run_type => 'Paired',
    library => $library,
    median_insert_size => 260,# 181, but 260 was used to generate assembly
    archive_path => $archive_path,
    fwd_clusters => 15000,
    rev_clusters => 15000,
);
ok($instrument_data, 'instrument data');
ok($instrument_data->is_paired_end, 'inst data is paired');
ok(-s $instrument_data->archive_path, 'inst data archive path');

my $pp = Genome::ProcessingProfile::DeNovoAssembly->create(
    name => 'De Novo Assembly Abyss Test',
    assembler_name => 'abyss parallel',
    assembler_version => '1.2.7',
    assembler_params => '-kmer_size 25,31..35 step 2,50 -num_jobs 4',
);
ok($pp, 'pp') or die;

my $model = Genome::Model::DeNovoAssembly->create(
    processing_profile => $pp,
    subject_name => $taxon->name,
    subject_type => 'species_name',
    center_name => 'WUGC',
);
ok($model, 'soap de novo model') or die;
ok($model->add_instrument_data($instrument_data), 'add inst data to model');

my $build = Genome::Model::Build::DeNovoAssembly->create(
    model => $model,
    data_directory => $tmpdir,
);
ok($build, 'created build');
my $example_build = Genome::Model::Build->create(
    model => $model,
    data_directory => $example_dir,
);
ok($example_build, 'create example build');

# PREPARE INST DATA
my @assembler_input_files = $build->existing_assembler_input_files;
ok(!@assembler_input_files, 'assembler input files do not exist');

my $prepare = Genome::Model::Event::Build::DeNovoAssembly::PrepareInstrumentData->create(build => $build, model => $model);
ok($prepare, 'create prepare instrument data');
$prepare->dump_status_messages(1);
ok($prepare->execute, 'execute prepare instrument data');

@assembler_input_files = $build->existing_assembler_input_files;
is(@assembler_input_files, 2, 'assembler input files exist');
my @example_assembler_input_files = $example_build->existing_assembler_input_files;
is(@example_assembler_input_files, 2, 'example assembler input files do not exist');
is_deeply(\@assembler_input_files, [ map { $tmpdir.'/'.$_ } (qw/ fwd.fq rev.fq /) ], 'existing assembler file names');
is(
    File::Compare::compare($assembler_input_files[0], $example_assembler_input_files[0]),
    0, 
    'assembler fwd file matches',
);
is(
    File::Compare::compare($assembler_input_files[1], $example_assembler_input_files[1]),
    0, 
    'assembler rev file matches',
);

# ASSEMBLE
my %assembler_params = $build->assembler_params;
#print Data::Dumper::Dumper(\%assembler_params);
is_deeply(
    \%assembler_params,
    {
        'version' => '1.2.7',
        'fastq_a' => $assembler_input_files[0],
        'fastq_b' => $assembler_input_files[1],
        'num_jobs' => '4',
        'kmer_size' => '25,31..35 step 2,50',
        'output_directory' => $build->data_directory,
    },
    'assembler params',
);


#print $build->data_directory."\n"; <STDIN>;
done_testing();
exit;

# TODO assemble fails b/c of trying to rm tmp dir when in said tmp dir
my $assemble = Genome::Model::Event::Build::DeNovoAssembly::Assemble->create(build => $build, model => $model);
ok($assemble, 'create assemble');
$assemble->dump_status_messages(1);
ok($assemble->execute, 'execute assemble');

# TODO add files...
for my $file_name (qw/ ADD FILES /) {
    my $file = $build->$file_name;
    ok(-s $file, "Build $file_name exists");
    my $example_file = $example_build->$file_name;
    ok(-s $example_file, "Example $file_name exists");
    is( File::Compare::compare($file, $example_file), 0, "Generated $file_name matches example file");
}


# TODO metrics

#print $build->data_directory."\n"; <STDIN>;
done_testing();
exit;

