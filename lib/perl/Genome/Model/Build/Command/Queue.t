#!/usr/bin/env perl

use strict;
use warnings;

BEGIN {
    $ENV{UR_USE_DUMMY_AUTOGENERATED_IDS} = 1;
    $ENV{UR_DBI_NO_COMMIT} = 1;   
};

use above 'Genome';
use Sys::Hostname;
use Test::More;

# use
use_ok('Genome::Model::Build::Command::Queue') or die;

# ur dummy ids
ok($ENV{UR_USE_DUMMY_AUTOGENERATED_IDS}, 'Use dummy ids');
ok($ENV{UR_DBI_NO_COMMIT}, 'No commit');

my $s = Genome::Sample->create(name => 'TEST-' . __FILE__ . "-$$");
ok($s, "made a test sample");

my $p = Genome::ProcessingProfile::TestPipeline->create(
    name => "test " . __FILE__ . " on host ".hostname." process $$",
    some_command_name => 'ls',
);
ok($p, "made a test processing profile");

my $m = Genome::Model::TestPipeline->create(
    processing_profile_id => $p->id,
    subject_class_name => ref($s),
    subject_id => $s->id,
);
ok($m, "made a test model");
my $model_id = $m->id;

# ok
my $rv = eval {
    my $model_queue = Genome::Model::Build::Command::Queue->create(
        models => [$m],
    );
    return $model_queue->execute;
};
ok(!$@, "the command did not crash");
is($rv, 1, "command believes it succeeded");

is($m->build_requested, 1, 'The command requested a build for the model');

done_testing();
exit;

#$HeadURL$
#$Id$
