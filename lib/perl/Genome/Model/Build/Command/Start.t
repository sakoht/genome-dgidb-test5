#!/gsc/bin/perl

use strict;
use warnings;

use above 'Genome';

require File::Temp;
use Genome::Model::Test;
use Test::More;

# use
use_ok('Genome::Model::Build::Command::Start') or die;

# ur dummy ids
$ENV{UR_USE_DUMMY_AUTOGENERATED_IDS} = 1;
ok($ENV{UR_USE_DUMMY_AUTOGENERATED_IDS}, 'Use dummy ids');
$ENV{UR_DBI_NO_COMMIT} = 1;
ok($ENV{UR_DBI_NO_COMMIT}, 'No commit');

# overload
no warnings 'redefine';
# bsub so we don't launch
*Genome::Model::Build::_execute_bsub_command = sub{ return 1; };
# so we execute services build run
*Genome::Model::Command::Services::Build::Run::execute = sub{ return 1; };
use warnings;

# tmpdir
my $tmpdir = File::Temp::tempdir(CLEANUP => 1);
ok(-d $tmpdir, 'Created temp dir');

# model
my $model = Genome::Model::Test->create_basic_mock_model(
    type_name => 'tester',
);
ok($model, 'Created mock model');
my $model_id = $model->id;

# ok
my $exit_code1 = eval { 
    Genome::Model::Build::Command::Start->_execute_with_shell_params_and_return_exit_code(
        '--models' => $model->id,
        '--data-directory' => $tmpdir,
    );
};
ok(!$@, "the command did not crash");
is($exit_code1, 0, "command believes it succeeded");

# Check that the lock was created. During normal execution, the lock would
#  removed on commit. But we're not committing here, so rollback, and make sure
#  it is removed
ok(-e "/gsc/var/lock/build_start/$model_id", 'Model lock exists');
ok(UR::Context->rollback, 'Rollback');
ok(!-e "/gsc/var/lock/build_start/$model_id", 'Model lock removed');

done_testing();
exit;

#$HeadURL$
#$Id$
