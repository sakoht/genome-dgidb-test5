#!/gsc/bin/perl

use strict;
use warnings;

BEGIN {
    $ENV{UR_DBI_NO_COMMIT} = 1;
    $ENV{UR_USE_DUMMY_AUTOGENERATED_IDS} = 1;
};

use Test::More tests => 7;

use above 'Genome';

use_ok('Genome::Model::Build::ReferenceSequence::Converter');

my ($ref_seq_a, $ref_seq_b, $feature_list) = setup_test_data();
isa_ok($ref_seq_a, 'Genome::Model::Build::ReferenceSequence', 'created test reference-sequence a');
isa_ok($ref_seq_b, 'Genome::Model::Build::ReferenceSequence', 'created test reference-sequence b');
isa_ok($feature_list, 'Genome::FeatureList', 'created test feature-list');

my $converter = Genome::Model::Build::ReferenceSequence::Converter->create(
    source_reference_build => $ref_seq_a,
    destination_reference_build => $ref_seq_b,
    algorithm => 'convert_chrXX_contigs_to_GL',
);

isa_ok($converter, 'Genome::Model::Build::ReferenceSequence::Converter', 'created converter');

my $converted_bed_file = $feature_list->converted_bed_file($ref_seq_b);
ok($converted_bed_file, 'got converted BED file');

my $expected_result = <<EOBED
1	2	3	r0
GL000209.1	1000	1100	r1
X	15	25	r2
EOBED
;
my $diff = Genome::Sys->diff_file_vs_text($converted_bed_file, $expected_result);
ok(!$diff, 'converter produced expected result')
    or diag('diff: ' . $diff);

sub setup_test_data {
    my $taxon = Genome::Taxon->get(species_name => 'human');
    my $pp = Genome::ProcessingProfile::ImportedReferenceSequence->create(name => 'test_ref_seq_pp');
    my $ref_seq_model = Genome::Model::ReferenceSequence->create(
        processing_profile_id => $pp->id,
        subject_id => $taxon->id,
        subject_class_name => $taxon->class,
        name => 'test_for_converter',
    );

    my $ref_seq_a = Genome::Model::Build::ReferenceSequence->create(
        model_id => $ref_seq_model->id,
        version => 'a',
    );

    my $ref_seq_b = Genome::Model::Build::ReferenceSequence->create(
        model_id => $ref_seq_model->id,
        version => 'b',
    );

    my $temp_file = Genome::Sys->create_temp_file_path();

    my $test_bed_content = <<EOBED
chr1	2	3	region1
chr19_GL000209R	1000	1100	region2
chrX	15 	25	region3
EOBED
;
    Genome::Sys->write_file($temp_file, $test_bed_content);
    my $md5 = Genome::Sys->md5sum($temp_file);

    my $feature_list = Genome::FeatureList->create(
        name => 'ref_seq_test_feature_list',
        format => 'true-BED',
        reference_id => $ref_seq_a->id,
        file_path => $temp_file,
        file_content_hash => $md5,
    );

    return ($ref_seq_a, $ref_seq_b, $feature_list);
}
