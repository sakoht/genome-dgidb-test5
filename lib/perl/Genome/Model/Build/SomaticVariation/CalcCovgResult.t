#!/gsc/bin/perl

BEGIN { 
    $ENV{UR_DBI_NO_COMMIT} = 1;
    $ENV{UR_USE_DUMMY_AUTOGENERATED_IDS} = 1;
}

use strict;
use warnings;

use above "Genome";
use Test::More;

use_ok("Genome::Model::Build::SomaticVariation::CalcCovgResult");

my $data_dir = '/gsc/var/cache/testsuite/data/Genome-Model-Build-SomaticVariation-CalcCovgResult';

my $base_dir = $data_dir."/v1";

my $ref_seq = $base_dir."/ref.fa";

my $build = &setup_somatic_variation_build;

my %calc_covg_params = (
    somatic_variation_build => $build,
    reference_sequence => $ref_seq,,
    roi_file => $base_dir."/roi.bed",
    normal_min_depth => 6,
    tumor_min_depth => 8,
    min_mapq => 20,
    test_name => "testing",
);

my $calc_covg_result = Genome::Model::Build::SomaticVariation::CalcCovgResult->get_or_create(%calc_covg_params);
isa_ok($calc_covg_result, 'Genome::Model::Build::SomaticVariation::CalcCovgResult', 'successful run');

my $file_name = $calc_covg_result->output_file;
my $output_file = $calc_covg_result->output_dir."/".$file_name;

my $expected_out = $base_dir."/expected.out";

my $diff = Genome::Sys->diff_file_vs_file($output_file, $expected_out);
ok(!$diff, 'returned file matches expected file')
    or diag("diff:\n" . $diff);

done_testing;

sub setup_somatic_variation_build {
    my $temp_build_data_dir1 = Genome::Sys->create_temp_directory();
    my $temp_build_data_dir2 = Genome::Sys->create_temp_directory();
    my $temp_build_data_dir3 = Genome::Sys->create_temp_directory();
    Genome::Sys->create_directory($temp_build_data_dir1."/alignments");
    Genome::Sys->create_directory($temp_build_data_dir2."/alignments");

    Genome::Sys->create_symlink("$base_dir/normal.bam", "$temp_build_data_dir1/alignments/normal_merged_rmdup.bam");
    Genome::Sys->create_symlink("$base_dir/normal.bam.bai", "$temp_build_data_dir1/alignments/normal_merged_rmdup.bam.bai");
    Genome::Sys->create_symlink("$base_dir/tumor.bam", "$temp_build_data_dir2/alignments/tumor_merged_rmdup.bam");
    Genome::Sys->create_symlink("$base_dir/tumor.bam.bai", "$temp_build_data_dir2/alignments/tumor_merged_rmdup.bam.bai");

    my $test_profile = Genome::ProcessingProfile::ReferenceAlignment->create(
        name => 'test_profile',
        sequencing_platform => 'solexa',
        dna_type => 'cdna',
        read_aligner_name => 'bwa',
        snv_detection_strategy => 'samtools',
    );

    my $test_somvar_pp = Genome::ProcessingProfile::SomaticVariation->create(
        name => 'test somvar pp',
        snv_detection_strategy => 'samtools r599 [--test=1]',
        tiering_version => 1,
    );

    my $annotation_build = Genome::Model::Build::ImportedAnnotation->__define__(
        model_id => '-1',
    );

    my $test_individual = Genome::Individual->create(
        common_name => 'TEST',
        name => 'test_individual',
    );

    my $test_sample = Genome::Sample->create(
        name => 'test_subject',
        source_id => $test_individual->id,
        extraction_label => "test_individual1",
    );

    my $test_control_sample = Genome::Sample->create(
        name => 'test_control_subject',
        source_id => $test_individual->id,
        extraction_label => "test_individual2",
    );

    my $test_instrument_data = Genome::InstrumentData::Solexa->create(
    );

    my $reference_sequence_build = Genome::Model::Build::ReferenceSequence->get_by_name('GRCh37-lite-build37');
    my $test_model = Genome::Model->create(
        name => 'test_reference_aligment_model_TUMOR',
        subject_name => 'test_subject',
        subject_type => 'sample_name',
        processing_profile_id => $test_profile->id,
        reference_sequence_build => $reference_sequence_build,
    );

    my $add_ok = $test_model->add_instrument_data($test_instrument_data);

    my $test_build = Genome::Model::Build->create(
        model_id => $test_model->id,
        data_directory => $temp_build_data_dir1,
    );

    my $test_model_two = Genome::Model->create(
        name => 'test_reference_aligment_model_mock_NORMAL',
        subject_name => 'test_control_subject',
        subject_type => 'sample_name',
        processing_profile_id => $test_profile->id,
        reference_sequence_build => $reference_sequence_build,
    );

    $add_ok = $test_model_two->add_instrument_data($test_instrument_data);

    my $test_build_two = Genome::Model::Build->create(
        model_id => $test_model_two->id,
        data_directory => $temp_build_data_dir2,
    );

    my $somvar_model = Genome::Model::SomaticVariation->create(
        tumor_model => $test_model,
        normal_model => $test_model_two,
        name => 'test somvar model',
        processing_profile => $test_somvar_pp,
        annotation_build => $annotation_build,
    );

    my $somvar_build = Genome::Model::Build::SomaticVariation->__define__(
        model_id => $somvar_model->id,
        data_directory => $temp_build_data_dir3,
        tumor_build => $test_build_two,
        normal_build => $test_build,
    );
    my $e = Genome::Model::Event::Build->__define__(
        build_id => $somvar_build->id,
        event_type => 'genome model build',
        event_status => 'Succeeded',
        model_id => $somvar_model->id,
        date_completed => '1999-01-01 15:19:01',
    );

    return $somvar_build;
}
