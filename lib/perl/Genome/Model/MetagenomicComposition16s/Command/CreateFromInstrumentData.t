#!/usr/bin/env perl

BEGIN {
    $ENV{UR_USE_DUMMY_AUTOGENERATED_IDS} = 1;
    $ENV{UR_DBI_NO_COMMIT} = 1;
}

use strict;
use warnings;

use above 'Genome';

use Data::Dumper 'Dumper';
use Test::More;

use_ok('Genome::Model::MetagenomicComposition16s::Command::CreateFromInstrumentData') or die;

# SETUP
my $pp = Genome::ProcessingProfile->get(2278045);
ok($pp, 'get pp') or die;
my @instrument_data;
for my $i (1..2) {
    my $sample = Genome::Sample->create(
        name => '__TEST__SAMPLE'.$i.'__',
    );
    ok($sample, 'create sample') or die;
    my $library = Genome::Library->create(
        name => $sample->name.'-testlibs',
        sample_id => $sample->id,
    );
    ok($library, 'create library') or die;
    my $instrument_data = Genome::InstrumentData::454->create(
        region_number => 1,
        run_name => 'R_2010_01_09_11_08_12_FLX08080418_Administrator_100737113',
        library => $library,
        sequencing_platform => '454',
    );
    ok($instrument_data, 'create inst data');
    push @instrument_data, $instrument_data;
}
my $project = Genome::Project->create(name => '__TEST__PROJECT__');
ok($project, 'created project');

# TEST
my $cmd = Genome::Model::MetagenomicComposition16s::Command::CreateFromInstrumentData->create(
    processing_profile => $pp,
    instrument_data => \@instrument_data,
    project => $project,
    namer => '$s.".".$pp',
);
ok($cmd, 'create command');
$cmd->dump_status_messages(1);
ok($cmd->execute, 'execute');

my @models = sort { $a->id cmp $b->id } $cmd->_models;
is(@models, @instrument_data, 'create '.@instrument_data.' models');
is_deeply(
    [ map { $_->name } @models ],
    [ map { $_->subject->name.'.'.$_->processing_profile->name } @models ],
    'models are named correctly',
);
my @project_models = sort { $a->id cmp $b->id } map { $_->entity } $project->parts('entity_class_name like' => 'Genome::Model%');
is_deeply(\@project_models, \@models, 'added models to project');

done_testing();
exit;

