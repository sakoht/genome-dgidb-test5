#!/usr/bin/env perl

use strict;
use warnings;

use above 'Genome';

use Data::Dumper 'Dumper';
use Test::More;

$ENV{UR_DBI_NO_COMMIT} = 1;
$ENV{UR_USE_DUMMY_AUTOGENERATED_IDS} = 1;

use_ok('Genome::Sample::Command::Import::Dacc') or die;

UR::DataSource->next_dummy_autogenerated_id;
do {
    $UR::DataSource::last_dummy_autogenerated_id = int($UR::DataSource::last_dummy_autogenerated_id / 10);
} until length($UR::DataSource::last_dummy_autogenerated_id) < 9;
diag('Dummy ID: '.$UR::DataSource::last_dummy_autogenerated_id);
cmp_ok(length($UR::DataSource::last_dummy_autogenerated_id), '<',  9, 'dummy id is shorter than 9 chars');

# xml file import
my $dir = '/gsc/var/cache/testsuite/data/Genome-InstrumentData-Command-Dacc/SRS000000';
my @xml_files = glob($dir.'/*xml');
is(@xml_files, 2, 'Got 2 xml files');
note('xml file import');
my $sample_name = 'SRS000000';
my $library_name = $sample_name.'-extlibs';
my $import = Genome::Sample::Command::Import::Dacc->create(
    sra_sample_id => $sample_name,
    xml_files => \@xml_files,
);
ok($import, 'create');
$import->dump_status_messages(1);
ok($import->execute, 'execute');

is($import->_individual->name, 'dbGaP-241763', 'individual name');
is($import->_individual->upn, 'dbGaP-241763', 'individual upn');
is($import->_individual->nomenclature, 'dbGaP', 'individual nomenclature');
is($import->_sample->name, $sample_name, 'sample name');
is($import->_sample->nomenclature, 'dbGaP', 'sample nomenclature');
is($import->_sample->extraction_label, $sample_name, 'sample extraction label');
is($import->_sample->extraction_type, 'genomic dna', 'sample extraction type');
is_deeply($import->_sample->source, $import->_individual, 'sample source');
is($import->_library->name, $library_name, 'library name');
is_deeply($import->_library->sample, $import->_sample, 'library sample');
is(@{$import->_created_objects}, 2, 'created 2 objects');

# basic import
note('basic import');
$import = Genome::Sample::Command::Import::Dacc->create(
    sra_sample_id => $sample_name,
);
ok($import, 'create');
$import->dump_status_messages(1);
ok($import->execute, 'execute');

is($import->_individual->name, 'dbGaP-241763', 'individual name');
is($import->_individual->upn, 'dbGaP-241763', 'individual upn');
is($import->_individual->nomenclature, 'dbGaP', 'individual nomenclature');
is($import->_sample->name, $sample_name, 'sample name');
is($import->_sample->nomenclature, 'dbGaP', 'sample nomenclature');
is($import->_sample->extraction_label, $sample_name, 'sample extraction label');
is($import->_sample->extraction_type, 'genomic dna', 'sample extraction type');
is_deeply($import->_sample->source, $import->_individual, 'sample source');
is($import->_library->name, $library_name, 'library name');
is_deeply($import->_library->sample, $import->_sample, 'library sample');
ok(!$import->_created_objects, 'did not create any objects');

done_testing();
exit;

