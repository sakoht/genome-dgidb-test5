#!/usr/bin/env perl

use strict;
use warnings;

BEGIN {
    $ENV{UR_DBI_NO_COMMIT} = 1;
    $ENV{UR_USE_DUMMY_AUTOGENERATED_IDS} = 1; #FeatureLists generate their own IDs, but this is still a good idea
};

use Test::More tests => 9;

use above 'Genome';

use_ok('Genome::FeatureList::Command::Update');

my $test_bed_file = __FILE__ . '.bed';
ok(-e $test_bed_file, 'test file ' . $test_bed_file . ' exists');

my $test_bed_file_md5 = Genome::Sys->md5sum($test_bed_file);

my $feature_list = Genome::FeatureList->create(
    name                => 'GFL test feature-list',
    format              => 'true-BED',
    content_type        => 'targeted',
    description         => 'dummy feature-list for testing the update command',
    file_path           => $test_bed_file,
    file_content_hash   => $test_bed_file_md5,
);  

ok($feature_list, 'created a feature list');
isa_ok($feature_list, 'Genome::FeatureList');

my $update_format = Genome::FeatureList::Command::Update->execute(
    feature_list => [$feature_list],
    format => 'unknown', 
);

is($feature_list->format, 'unknown', 'Successfully updated format');

$update_format = Genome::FeatureList::Command::Update->execute(
    feature_list => [$feature_list],
    format => 'true-BED', 
    source => 'test-data-makers',
    content_type => 'exome',
    description => 'updated description for the update command test',
);

is($feature_list->format, 'true-BED', "Successfully updated format");
is($feature_list->source, 'test-data-makers', "Successfully updated source");
is($feature_list->content_type, 'exome', "Successfully updated content_type");
is($feature_list->description, 'updated description for the update command test', );

