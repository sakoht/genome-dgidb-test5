#!/usr/bin/env perl

use strict;
use warnings;

BEGIN {
    $ENV{UR_DBI_NO_COMMIT} = 1;
    $ENV{UR_USE_DUMMY_AUTOGENERATED_IDS} = 1;
}

use above "Genome";

use Test::More tests => 11;

use_ok('Genome::Library::View::Status::Html') or die "test cannot continue...";


my $subject = _prepare_objects();

my $view_obj = $subject->create_view(
    xsl_root => Genome->base_dir . '/xsl',
    rest_variable => '/cgi-bin/rest.cgi',
    toolkit => 'html',
    perspective => 'status',
);
ok($view_obj, "created a view") or die "test cannot continue...";
isa_ok($view_obj, 'Genome::Library::View::Status::Html');

my $xml = $view_obj->_generate_content();
ok($xml, "view returns HTML") or die "test cannot continue...";



sub _prepare_objects {
    my $fake_taxon = Genome::Taxon->create(name => 'TEST-library-view-xml-t-taxon', species_latin_name => 'nomen');
    isa_ok($fake_taxon, 'Genome::Taxon', 'created test taxon');
    my $fake_individual = Genome::Individual->create(taxon => $fake_taxon, name => 'Test-library-view-xml-t-individual');
    isa_ok($fake_individual, 'Genome::Individual', 'created test individual');
    my $fake_sample = Genome::Sample->create(source => $fake_individual, name => 'Test-library-view-xml-t-sample');
    isa_ok($fake_sample, 'Genome::Sample', 'created test sample');
    my $fake_library = Genome::Library->create(sample => $fake_sample, name => 'TEST-library-view-xml-t-library');
    isa_ok($fake_library, 'Genome::Library', 'created test library')  or die "test cannot continue...";

    class Genome::ProcessingProfile::Test {
        is => 'Genome::ProcessingProfile',
        has_param => [
            test_param => {
                is => 'Text',
                doc => 'A parameter for testing',
            },
        ],
    };

    my $pp = Genome::ProcessingProfile::Test->create(name => 'TEST-library-view-xml-t-pp', test_param => 'TEST-library-view-xml-t-pp');
    isa_ok($pp, 'Genome::ProcessingProfile', 'created test processing-profile');
    my $m = Genome::Model::Test->create(processing_profile => $pp, name => 'TEST-library-view-xml-t-model', subject => $fake_sample);
    isa_ok($m, 'Genome::Model', 'created test model');

    $DB::single = 1;

    my @m = $fake_library->models;
    is($m[0], $m, 'fake library returns created model');

    return $fake_library;
}
