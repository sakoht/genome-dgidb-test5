#!/usr/bin/env perl
use strict;
use warnings;
use above "Genome";
use Test::More tests => 4;
$ENV{UR_USE_DUMMY_AUTOGENERATED_IDS} = "1";
$ENV{UR_DBI_NO_COMMIT} = "1";

my $s = Genome::Sample->get(2824113569);

my $i = Genome::InstrumentData::Imported->create(
    id => -123,
    sample_name             => $s->name,  
    sample_id               => $s->id, 
    import_source_name      => 'Broad',
    original_data_path      => '/tmp/foo',
    import_format           => 'bam',
    sequencing_platform     => 'solexa',
    description             => 'big ugly bwa file',
    read_count              => 1000,
    base_count              => 100000,
);

ok($i, "created a new imported instrument data");

my $i2 = Genome::InstrumentData::Imported->create(
    id => -456,
    sample_name             => $s->name,  
    sample_id               => $s->id, 
    import_source_name      => 'Broad',
    original_data_path      => '/tmp/nst',
    import_format           => 'bam',
    sequencing_platform     => '454',
    description             => 'big ugly bwa file',
    read_count              => 1000,
    base_count              => 100000,
);

ok($i2, "created a new imported instrument data");

my $ok;
eval { $ok = UR::Context->_sync_databases(); };
ok($ok, "saves to the database!");

#UR::Context->commit;
#call $instrument_data->delete to delete

# have to use --instrument-data because a dash makes Command think it is an option
my $remove_command = Genome::InstrumentData::Command::Remove->create(instrument_data => [$i, $i2]);
ok($remove_command->execute(), "command succeeded");

