#!/usr/bin/env perl

use strict;
use warnings;

use above "Genome";

use Data::Dumper;
use Test::More;

if (Genome::Config->arch_os ne 'x86_64') {
    plan skip_all => 'requires 64-bit machine';
}

$ENV{UR_USE_DUMMY_AUTOGENERATED_IDS} = "1";
$ENV{UR_DBI_NO_COMMIT} = "1";

UR::DataSource->next_dummy_autogenerated_id;
do {
    $UR::DataSource::last_dummy_autogenerated_id = int($UR::DataSource::last_dummy_autogenerated_id / 10);
} until length($UR::DataSource::last_dummy_autogenerated_id) < 9;
diag('Dummy ID: '.$UR::DataSource::last_dummy_autogenerated_id);
cmp_ok(length($UR::DataSource::last_dummy_autogenerated_id), '<',  9, 'dummy id is shorter than 9 chars');

use_ok('Genome::InstrumentData::Command::Import::Microarray::IlluminaGenotypeArray') or die;

my $source_dir = '/gsc/var/cache/testsuite/data/Genome-InstrumentData-Command-Import-Microarray/test_files'; 
ok (-s $source_dir, "our example imported file exists");

my $sample_name = 'TEST-patient1-sample1';
my $sample = Genome::Sample->get(name => $sample_name);
is($sample->name,$sample_name, "found sample $sample_name") or die;

my $reference = Genome::Model::Build::ImportedReferenceSequence->get(name => 'NCBI-human-build36');
ok($reference, 'found refseq build36') or die;

my $cmd = Genome::InstrumentData::Command::Import::Microarray::IlluminaGenotypeArray->create(
    sample => $sample,
    original_data_path => $source_dir,
    reference_sequence_build => $reference,
    description => 'TEST imprted illumina',
);
ok($cmd, "constructed an import command");
$cmd->dump_status_messages(1);
my @errors = $cmd->__errors__;
is(scalar(@errors),0, "no errors in cmd");
ok($cmd->execute, "execution was successful");

my $i = $cmd->_instrument_data;
is($i->original_data_path,$source_dir,"found imported data and source_data_path is properly set");
is($i->library_name, $sample_name.'-microarraylib', "library name");
my $disk = $i->allocations;
ok($disk, "found an allocation owned by the new instrument data");
my $data_directory = $i->data_directory;
ok(-d $data_directory, "data directory is present");
my @files = glob($data_directory.'/*');
is(@files, 10, 'instrument data file number is correct');
my $genotype_file = $i->genotype_microarray_file_for_reference_sequence_build($reference);
ok(-s $genotype_file, 'genotype file exists');

my $ssize = Genome::Sys->directory_size_recursive($source_dir);
my $dsize = Genome::Sys->directory_size_recursive($i->data_directory);
ok($ssize<=$dsize, "source and destination sizes match")
    or die "Source directory size($ssize bytes) did not match or excede destination directory size($dsize), dircopy did not succeed.";

my $model = $cmd->_model;
ok($model, 'created model');
my $build = $model->last_succeeded_build;
ok($build, 'got build');
my $snp_array_file = $build->formatted_genotype_file_path;
ok(-s $snp_array_file, 'created snp array file');
my $snvs_bed = $build->snvs_bed;
ok(-s $snvs_bed, 'created snvs bed file');

done_testing();
exit;
                                
