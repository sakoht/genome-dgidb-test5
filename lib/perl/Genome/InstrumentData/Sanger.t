#! /gsc/bin/perl

use strict;
use warnings;

use above 'Genome';

require File::Temp;
use Genome::Utility::TestBase;
use Test::More;

BEGIN {
    $ENV{UR_USE_DUMMY_AUTOGENERATED_IDS} = 1;
    $ENV{UR_DBI_NO_COMMIT} = 1;
}

use_ok('Genome::InstrumentData::Sanger');

# mock disk allocation
my $tmpdir = File::Temp::tempdir(CLEANUP => 1);
ok(-d $tmpdir, 'created tmp dir');
my $disk_allocation = Genome::Utility::TestBase->create_mock_object(
    class => 'Genome::Disk::Allocation',
    absolute_path => $tmpdir,
);
ok($disk_allocation, 'created mock disk allocation') or die;

# real gsc read
my $trace_name = 'HMPB-aad13a05.b1';
my @reads = GSC::Sequence::Read->get(
    trace_name => $trace_name,
);
ok($reads[0], 'got gsc read') or die;

# read iterator
#ok($sanger_inst_data->_get_read_iterator, 'read iterator before overload');
class ReadIterator {};
sub ReadIterator::increment_count {
    $_[0]->{_cnt}++;
}
sub ReadIterator::next {
    my $self = shift;
    my $cnt = $self->increment_count;
    return $reads[$cnt];
}
my $read_iterator = ReadIterator->create();
ok($read_iterator, 'created read iterator');

# get real inst data
my $sanger_inst_data = Genome::InstrumentData::Sanger->get('24jun09.906pmcb1');
ok($sanger_inst_data, 'got sanger inst data');

# full path from attributes - it's undefined
ok(!defined($sanger_inst_data->full_path), 'full path from attributes');

# full path from disk allocation
no warnings;
*Genome::InstrumentData::Sanger::disk_allocation = sub{ return $disk_allocation; };
use warnings;
my $path = $sanger_inst_data->full_path;
print "$path\n";
is($path, $disk_allocation->absolute_path, 'full path from allocation') or die;

# touch scf to see if it gets replaced
my $scf = $path.'/'.$trace_name.'.gz';
my $scf_fh = Genome::Sys->open_file_for_writing($scf);
ok($scf_fh, "opened $trace_name fh") or die;
$scf_fh->print("STUFF\n");
$scf_fh->close;
my $scf_sz = -s $scf;
cmp_ok($scf_sz, '>', 1, "$trace_name has size");

# dump traces to disk allocation dir
no warnings;
*Genome::InstrumentData::Sanger::_get_read_iterator= sub{ return $read_iterator; };
use warnings;
ok($sanger_inst_data->dump_to_file_system, 'dump to file system');
isnt(-s $scf, $scf_sz, "redumped $trace_name");

done_testing();
exit;

=pod

=head1 Tests

=head1 Disclaimer

 Copyright (C) 2006 Washington University Genome Sequencing Center

 This script is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY or the implied warranty of MERCHANTABILITY
 or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
 License for more details.

=head1 Author(s)

 Eddie Belter <ebelter@watson.wustl.edu>

=cut

#$HeadURL$
#$Id$
