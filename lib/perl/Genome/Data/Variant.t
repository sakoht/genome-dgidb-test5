#!/gsc/bin/perl

BEGIN { 
    $ENV{UR_DBI_NO_COMMIT} = 1;
    $ENV{UR_USE_DUMMY_AUTOGENERATED_IDS} = 1;
}

use strict;
use warnings;

use above "Genome";
use Test::More;

use_ok('Genome::Data::Variant') or die;

my $obj = eval { Genome::Data::Variant->create(foo => 'bar') };
my $error = $@;
ok($error =~ /Extra parameters/, 'create fails when given extra parameters');

my $chrom = 1;
my $start = 1234;
my $end = 1234;
my $id = "rs1234";
my $reference_allele = 'A';
my @alt_alleles = qw(C G TA);
my $qual = 0.00;
$obj = Genome::Data::Variant->create(
    chrom => $chrom,
    start => $start,
    end => $end,
    id => $id,
    reference_allele => $reference_allele,
    alt_alleles => \@alt_alleles,
    qual => $qual,
);

ok($obj, 'created object');
ok($obj->isa('Genome::Data::Variant'), 'object is a Genome::Data::Variant');

is($obj->chrom, $chrom, 'chrom matches');
is($obj->start, $start, 'start matches');
is($obj->end, $end, 'end matches');
is($obj->id, $id, 'id matches');
is($obj->reference_allele, $reference_allele, 'reference_allele matches');
is($obj->alt_alleles->[0], $alt_alleles[0], 'first alt allele matches');
is($obj->alt_alleles->[1], $alt_alleles[1], 'second alt allele matches');
is($obj->alt_alleles->[2], $alt_alleles[2], 'third alt allele matches');
is($obj->qual, $qual, 'qual matches');

done_testing();
