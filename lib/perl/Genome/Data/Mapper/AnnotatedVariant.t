#!/gsc/bin/perl

BEGIN { 
    $ENV{UR_DBI_NO_COMMIT} = 1;
    $ENV{UR_USE_DUMMY_AUTOGENERATED_IDS} = 1;
}

use strict;
use warnings;

use above "Genome";
use Test::More;

package Genome::Data::Mapper::AnnotatedVariant::Test;
use base 'Genome::Data::Mapper::AnnotatedVariant';

sub calculate_annotation_field {
    return '-';
}

sub calculate_transcript_annotation_field {
    return '-';
}

package Genome::Data::Variant::AnnotatedVariant::TestAv1;
use base 'Genome::Data::Variant::AnnotatedVariant';

package Genome::Data::Variant::AnnotatedVariant::TestAv2;
use base 'Genome::Data::Variant::AnnotatedVariant';

sub get_annotation_fields {

    my $self = shift;
    return [qw(field1 field2)];
}

sub get_transcript_annotation_fields {
    return [qw(t_field1 t_field2)];
}

package main;

use_ok('Genome::Data::Mapper::AnnotatedVariant') or die;

#Test create method
my $obj = eval {
    Genome::Data::Mapper::AnnotatedVariant::Test->create('Genome::Data::Variant::AnnotatedVariant::TestAv1',
                                                         'Genome::Data::Variant::AnnotatedVariant::TestAv2')
};

ok($obj, 'created object successfully');
ok($obj->isa('Genome::Data::Mapper::AnnotatedVariant::Test'), 'object is a Genome::Data::Mapper::AnnotatedVariant::Test');
ok($obj->isa('Genome::Data::Mapper::AnnotatedVariant'), 'object is a Genome::Data::Mapper::AnnotatedVariant');

#Test map method
my $annotations = {
    field1 => 'foo',
    field2 => 'bar',
};

my $t_annotation1 = {
    t_field1 => 'foot',
    t_field2 => 'bart',
};

my $t_annotation2 = {
    t_field1 => 'foot2',
    t_field2 => 'bart2',
};

my @t_annotations = ($t_annotation1, $t_annotation2);
my $var1 = Genome::Data::Variant::AnnotatedVariant::TestAv1->create(
        chrom => 1,
        start => 13,
        end => 14,
        reference_allele => 'A',
        alt_alleles => ['T', 'C'],
        annotations => $annotations,
        transcript_annotations => \@t_annotations,
    );

my $var2 = $obj->map($var1);

ok($var2, 'mapped object successfully');
ok($var2->isa('Genome::Data::Variant::AnnotatedVariant::TestAv2'));

foreach my $field (keys(%{$var2->annotations()})) {
    ok($var2->annotations->{$field} =~ /-/, 'field '.$field.' set correctly');
}

foreach my $t_annotation (@{$var2->transcript_annotations()}) {
    foreach my $t_field (keys (%$t_annotation)) {
        ok($t_annotation->{$t_field} =~ /-/, 't_field '.$t_field.' set correctly');
    }
}

done_testing();
