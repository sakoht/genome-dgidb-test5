#!/usr/bin/env perl

BEGIN {
    $ENV{UR_DBI_NO_COMMIT} = 1;
    $ENV{UR_USE_DUMMY_AUTOGENERATED_IDS} = 1;
};

use strict;
use warnings;

use above 'Genome';

use Test::More;

use_ok('Genome::ProcessingProfile::Command::Rename') or die;

class Genome::ProcessingProfile::Tester {
    is => 'Genome::ProcessingProfile',
};
my $pp = Genome::ProcessingProfile::Tester->create(name => '__TEST__PP__');
ok($pp, "create processing profile") or die;
my $pp2 = Genome::ProcessingProfile::Tester->create(name => '__TEST__PP2__');
ok($pp2, "create processing profile") or die;

# BAD - expected to fail
ok(1, "Testing the failures");

# invalid id - sanity check that we have a _verify_processing_profile method before executing
my $bad1 = Genome::ProcessingProfile::Command::Rename->create();
ok($bad1, 'Created the renamer w/ invalid id');
$bad1->dump_status_messages(1);
ok(!$bad1->execute, 'Execute failed as expected');

# no name
my $bad2 = Genome::ProcessingProfile::Command::Rename->create(
    processing_profile => $pp,
);
ok($bad2, 'Created the renamer w/o name');
$bad2->dump_status_messages(1);
ok(!$bad2->execute, 'Execute failed as expected');

# invalid name
my $bad3 = Genome::ProcessingProfile::Command::Rename->create(
    processing_profile => $pp,
    new_name => '',
);
ok($bad3, 'Created the renamer w/ invalid name');
$bad3->dump_status_messages(1);
ok(!$bad3->execute, 'Execute failed as expected');

# same name
my $bad4 = Genome::ProcessingProfile::Command::Rename->create(
    processing_profile => $pp,
    new_name => $pp->name,
);
ok($bad4, 'Created the renamer w/ same name');
$bad4->dump_status_messages(1);
ok(!$bad4->execute, 'Execute failed as expected');

# pp already exists
my $bad5 = Genome::ProcessingProfile::Command::Rename->create(
    processing_profile => $pp,
    new_name => $pp2->name,
);
ok($bad5, 'Created the renamer w/ name of existing pp');
$bad5->dump_status_messages(1);
ok(!$bad5->execute, 'Execute failed as expected');

# GOOD
my $new_name = '__NEW__NAME__';
my $renamer = Genome::ProcessingProfile::Command::Rename->create(
    processing_profile => $pp,
    new_name => $new_name,
);
ok($renamer, 'Created the renamer');
$renamer->dump_status_messages(1);
ok($renamer->execute, 'Executed the renamer');
is($pp->name, $new_name, 'Rename successful');

done_testing();
exit;

