description "genome www fastcgi server"

start on runlevel [2345]
stop on runlevel [!2345]

respawn

env LOG_DIR='/var/cache/genome/log'
env PID_DIR='/var/cache/genome/run'

pre-start script
    if [ ! -d "$LOG_DIR" ]; then
        mkdir -p "$LOG_DIR"
        chmod 755 "$LOG_DIR"
        chown "$RUN_AS_USER" "$LOG_DIR"
    fi
    if [ ! -d "$PID_DIR" ]; then
        mkdir -p "$PID_DIR"
        chmod 755 "$PID_DIR"
        chown "$RUN_AS_USER" "$PID_DIR"
    fi
end script

script
    GENOME_DEV_MODE=0
    export GENOME_DEV_MODE

    GENOME_VIEW_CACHE=0
    export GENOME_VIEW_CACHE

    USER=genome
    NAME="genome_view"
    PIDFILE="/var/cache/genome/run/$NAME.pid"
    RUN="no"
    OPTIONS=""
    LOGFILE=/var/cache/genome/log/genome_view.log
    GENOME=/usr/share/perl5/Genome
    PSGI=$GENOME/Model/Command/Services/WebApp/Main.psgi
    PORT=3060
    WORKERS=5
    OPTIONS="-M Genome::Model::Command::Services::WebApp::FCGI::Patch --app $PSGI --server FCGI -E development -I $INC --port $PORT -M Genome::Model::Command::Services::WebApp::Core --nproc $WORKERS --keep-stderr 1 --manager Genome::Model::Command::Services::WebApp::FCGI::ProcManager --pid $PIDFILE"

    if test ! -w $PIDFILE; then
        rm -f $PIDFILE
    fi
    echo $$ >$PIDFILE

    [ -f /lib/lsb/init-functions ] && . /lib/lsb/init-functions

    log_daemon_msg "Starting genome_view server" "$NAME"

    if [ $? != 0 ]; then
        log_end_msg 1
        exit 1
    else
        log_end_msg 0
    fi

    echo "starting server from $0 with GENOME_DEV_MODE=$GENOME_DEV_MODE" >>$LOGFILE

    exec /usr/bin/plackup $OPTIONS >>$LOGFILE 2>&1
end script

